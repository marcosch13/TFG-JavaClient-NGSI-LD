/*
 * NGSI-LD OAS
 * OpenAPI Specification for NGSI-LD API.
 *
 * The version of the OpenAPI document: 1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EntitySelector;
import org.openapitools.client.model.GeoQuery;
import org.openapitools.client.model.LdContext;
import org.openapitools.client.model.NotificationParams;
import org.openapitools.client.model.TemporalQuery;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateSubscriptionRequest1
 */
public class CreateSubscriptionRequest1Test {
    private final CreateSubscriptionRequest1 model = new CreateSubscriptionRequest1();

    /**
     * Model tests for CreateSubscriptionRequest1
     */
    @Test
    public void testCreateSubscriptionRequest1() {
        // TODO: test CreateSubscriptionRequest1
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'subscriptionName'
     */
    @Test
    public void subscriptionNameTest() {
        // TODO: test subscriptionName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'entities'
     */
    @Test
    public void entitiesTest() {
        // TODO: test entities
    }

    /**
     * Test the property 'notificationTrigger'
     */
    @Test
    public void notificationTriggerTest() {
        // TODO: test notificationTrigger
    }

    /**
     * Test the property 'q'
     */
    @Test
    public void qTest() {
        // TODO: test q
    }

    /**
     * Test the property 'geoQ'
     */
    @Test
    public void geoQTest() {
        // TODO: test geoQ
    }

    /**
     * Test the property 'csf'
     */
    @Test
    public void csfTest() {
        // TODO: test csf
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'notification'
     */
    @Test
    public void notificationTest() {
        // TODO: test notification
    }

    /**
     * Test the property 'expiresAt'
     */
    @Test
    public void expiresAtTest() {
        // TODO: test expiresAt
    }

    /**
     * Test the property 'temporalQ'
     */
    @Test
    public void temporalQTest() {
        // TODO: test temporalQ
    }

    /**
     * Test the property 'scopeQ'
     */
    @Test
    public void scopeQTest() {
        // TODO: test scopeQ
    }

    /**
     * Test the property 'lang'
     */
    @Test
    public void langTest() {
        // TODO: test lang
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'modifiedAt'
     */
    @Test
    public void modifiedAtTest() {
        // TODO: test modifiedAt
    }

    /**
     * Test the property 'deletedAt'
     */
    @Test
    public void deletedAtTest() {
        // TODO: test deletedAt
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'jsonldContext'
     */
    @Test
    public void jsonldContextTest() {
        // TODO: test jsonldContext
    }

    /**
     * Test the property 'watchedAttributes'
     */
    @Test
    public void watchedAttributesTest() {
        // TODO: test watchedAttributes
    }

    /**
     * Test the property 'throttling'
     */
    @Test
    public void throttlingTest() {
        // TODO: test throttling
    }

    /**
     * Test the property 'timeInterval'
     */
    @Test
    public void timeIntervalTest() {
        // TODO: test timeInterval
    }

    /**
     * Test the property 'atContext'
     */
    @Test
    public void atContextTest() {
        // TODO: test atContext
    }

}
