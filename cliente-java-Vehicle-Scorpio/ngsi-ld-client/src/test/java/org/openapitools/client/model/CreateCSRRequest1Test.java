/*
 * NGSI-LD OAS
 * OpenAPI Specification for NGSI-LD API.
 *
 * The version of the OpenAPI document: 1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CsourceRegistrationScope;
import org.openapitools.client.model.Geometry;
import org.openapitools.client.model.KeyValuePair;
import org.openapitools.client.model.LdContext;
import org.openapitools.client.model.RegistrationInfo;
import org.openapitools.client.model.RegistrationManagementInfo;
import org.openapitools.client.model.TimeInterval;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateCSRRequest1
 */
public class CreateCSRRequest1Test {
    private final CreateCSRRequest1 model = new CreateCSRRequest1();

    /**
     * Model tests for CreateCSRRequest1
     */
    @Test
    public void testCreateCSRRequest1() {
        // TODO: test CreateCSRRequest1
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'registrationName'
     */
    @Test
    public void registrationNameTest() {
        // TODO: test registrationName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'information'
     */
    @Test
    public void informationTest() {
        // TODO: test information
    }

    /**
     * Test the property 'tenant'
     */
    @Test
    public void tenantTest() {
        // TODO: test tenant
    }

    /**
     * Test the property 'observationInterval'
     */
    @Test
    public void observationIntervalTest() {
        // TODO: test observationInterval
    }

    /**
     * Test the property 'managementInterval'
     */
    @Test
    public void managementIntervalTest() {
        // TODO: test managementInterval
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'observationSpace'
     */
    @Test
    public void observationSpaceTest() {
        // TODO: test observationSpace
    }

    /**
     * Test the property 'operationSpace'
     */
    @Test
    public void operationSpaceTest() {
        // TODO: test operationSpace
    }

    /**
     * Test the property 'expiresAt'
     */
    @Test
    public void expiresAtTest() {
        // TODO: test expiresAt
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'contextSourceInfo'
     */
    @Test
    public void contextSourceInfoTest() {
        // TODO: test contextSourceInfo
    }

    /**
     * Test the property 'scope'
     */
    @Test
    public void scopeTest() {
        // TODO: test scope
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'operations'
     */
    @Test
    public void operationsTest() {
        // TODO: test operations
    }

    /**
     * Test the property 'refreshRate'
     */
    @Test
    public void refreshRateTest() {
        // TODO: test refreshRate
    }

    /**
     * Test the property 'management'
     */
    @Test
    public void managementTest() {
        // TODO: test management
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'modifiedAt'
     */
    @Test
    public void modifiedAtTest() {
        // TODO: test modifiedAt
    }

    /**
     * Test the property 'deletedAt'
     */
    @Test
    public void deletedAtTest() {
        // TODO: test deletedAt
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'timesSent'
     */
    @Test
    public void timesSentTest() {
        // TODO: test timesSent
    }

    /**
     * Test the property 'timesFailed'
     */
    @Test
    public void timesFailedTest() {
        // TODO: test timesFailed
    }

    /**
     * Test the property 'lastSuccess'
     */
    @Test
    public void lastSuccessTest() {
        // TODO: test lastSuccess
    }

    /**
     * Test the property 'lastFailure'
     */
    @Test
    public void lastFailureTest() {
        // TODO: test lastFailure
    }

    /**
     * Test the property 'atContext'
     */
    @Test
    public void atContextTest() {
        // TODO: test atContext
    }

}
