/*
 * NGSI-LD OAS
 * OpenAPI Specification for NGSI-LD API.
 *
 * The version of the OpenAPI document: 1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.OptionsSysAttrs;
import org.openapitools.client.model.ProblemDetails;
import org.openapitools.client.model.QueryEntityCoordinatesParameter;
import org.openapitools.client.model.QueryEntityGeorelParameter;
import org.openapitools.client.model.QueryTemporal;
import org.openapitools.client.model.QueryTemporal200ResponseInner;
import org.openapitools.client.model.QueryTemporal200ResponseInner1;
import org.openapitools.client.model.TemporalQueryBatchRequest;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemporalContextInformationConsumptionApi
 */
@Disabled
public class TemporalContextInformationConsumptionApiTest {

    private final TemporalContextInformationConsumptionApi api = new TemporalContextInformationConsumptionApi();

    /**
     * Query temporal evolution of Entities 
     *
     * 5.7.4 Query Temporal Evolution of Entities.  This operation allows querying the temporal evolution of Entities present in an NGSI-LD system. It is similar to the operation defined by clause 5.7.2 (Query Entities) with the addition of a temporal query.  *The query parameters timerel and timeAt are required. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTemporalTest() throws ApiException {
        List<URI> id = null;
        String type = null;
        String idPattern = null;
        List<String> attrs = null;
        String q = null;
        String csf = null;
        String geometry = null;
        QueryEntityGeorelParameter georel = null;
        QueryEntityCoordinatesParameter coordinates = null;
        String geoproperty = null;
        String timeproperty = null;
        String timerel = null;
        OffsetDateTime timeAt = null;
        OffsetDateTime endTimeAt = null;
        Integer lastN = null;
        String lang = null;
        String aggrMethods = null;
        String aggrPeriodDuration = null;
        String scopeQ = null;
        Integer limit = null;
        Boolean count = null;
        List<OptionsSysAttrs> options = null;
        Boolean local = null;
        URI link = null;
        String ngSILDTenant = null;
        List<QueryTemporal200ResponseInner> response = api.queryTemporal(id, type, idPattern, attrs, q, csf, geometry, georel, coordinates, geoproperty, timeproperty, timerel, timeAt, endTimeAt, lastN, lang, aggrMethods, aggrPeriodDuration, scopeQ, limit, count, options, local, link, ngSILDTenant);
        // TODO: test validations
    }

    /**
     * Temporal Representation of Entity retrieval by id 
     *
     * 5.7.3 Retrieve Temporal Evolution of an Entity.  This operation allows retrieving the temporal evolution of an NGSI-LD Entity. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveTemporalTest() throws ApiException {
        URI entityId = null;
        List<String> attrs = null;
        String timeproperty = null;
        String timerel = null;
        OffsetDateTime timeAt = null;
        OffsetDateTime endTimeAt = null;
        Integer lastN = null;
        String lang = null;
        String aggrMethods = null;
        String aggrPeriodDuration = null;
        List<OptionsSysAttrs> options = null;
        Boolean local = null;
        URI link = null;
        String ngSILDTenant = null;
        QueryTemporal200ResponseInner response = api.retrieveTemporal(entityId, attrs, timeproperty, timerel, timeAt, endTimeAt, lastN, lang, aggrMethods, aggrPeriodDuration, options, local, link, ngSILDTenant);
        // TODO: test validations
    }

    /**
     * Temporal Representation of Entity Query based on POST 
     *
     * 5.7.4 Query Temporal Evolution of Entities.  This operation allows querying the temporal evolution of Entities present in an NGSI-LD system. It is similar to the operation defined by clause 5.7.2 (Query Entities) with the addition of a temporal query. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void temporalQueryBatchTest() throws ApiException {
        Boolean local = null;
        URI link = null;
        String ngSILDTenant = null;
        QueryTemporal queryTemporal = null;
        List<QueryTemporal200ResponseInner> response = api.temporalQueryBatch(local, link, ngSILDTenant, queryTemporal);
        // TODO: test validations
    }

}
