/*
 * NGSI-LD OAS
 * OpenAPI Specification for NGSI-LD API.
 *
 * The version of the OpenAPI document: 1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * 6.3.11 Including system generated attributes.  When its value includes the keyword \&quot;sysAttrs\&quot;, a representation of NGSI-LD Elements shall be  provided so that the system generated attributes createdAt, modifiedAt are included in the response  payload body. In the case of temporal representations, also the system generated attribute deletedAt  is included, if the NGSI-LD Element has been deleted. 
 */
@JsonAdapter(OptionsSysAttrs.Adapter.class)
public enum OptionsSysAttrs {
  
  SYS_ATTRS("sysAttrs");

  private String value;

  OptionsSysAttrs(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OptionsSysAttrs fromValue(String value) {
    for (OptionsSysAttrs b : OptionsSysAttrs.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<OptionsSysAttrs> {
    @Override
    public void write(final JsonWriter jsonWriter, final OptionsSysAttrs enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OptionsSysAttrs read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OptionsSysAttrs.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    OptionsSysAttrs.fromValue(value);
  }
}

