openapi: 3.0.3
info:
  contact:
    url: https://www.etsi.org/committee/cim
  description: OpenAPI Specification for NGSI-LD API.
  license:
    name: BSD-3-Clause
    url: https://forge.etsi.org/legal-matters
  title: NGSI-LD OAS
  version: 1.7.1
externalDocs:
  description: ETSI GS CIM 009 V1.7.1 Context Information Management (CIM); NGSI-LD
    API
  url: https://www.etsi.org/deliver/etsi_gs/CIM/001_099/009/01.07.01_60/gs_CIM009v010701p.pdf
servers:
- url: "{protocol}://{hostname}:{port}/ngsi-ld/v1"
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
    hostname:
      default: localhost
    port:
      default: "443"
paths:
  /entities:
    get:
      description: |
        5.7.2 Query Entities (excluding batch entity queries).

        This operation allows querying an NGSI-LD system.
      operationId: queryEntity
      parameters:
      - description: List of entity ids to be retrieved.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uri
            type: string
          type: array
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Regular expression that shall be matched by entity ids.
        explode: true
        in: query
        name: idPattern
        required: false
        schema:
          format: pattern
          type: string
        style: form
      - description: |
          List of Attributes to be matched by the Entity and included in the response. If the Entity does not
          have any of the Attributes in attrs, then a 404 Not Found shall be retrieved. If attrs is not
          specified, no matching is performed and all Attributes related to the Entity shall be retrieved.
        explode: false
        in: query
        name: attrs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Query as per clause 4.9.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Context Source filter as per clause 4.9.
        explode: true
        in: query
        name: csf
        required: false
        schema:
          type: string
        style: form
      - description: |
          Geometry as per clause 4.10. It is part of geoquery. It shall be one if geometry or georel are present.
        explode: true
        in: query
        name: geometry
        required: false
        schema:
          enum:
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
          type: string
        style: form
      - description: |
          Geo relationship as per clause 4.10. It is part of geoquery. It shall be one if
          geometry or georel are present.
        explode: true
        in: query
        name: georel
        required: false
        schema:
          $ref: '#/components/schemas/queryEntity_georel_parameter'
        style: form
      - description: |
          Coordinates serialized as a string as per clause 4.10. It is part of geoquery.
          It shall be one if geometry or georel are present.
        explode: true
        in: query
        name: coordinates
        required: false
        schema:
          $ref: '#/components/schemas/queryEntity_coordinates_parameter'
        style: form
      - description: |
          The name of the Property that contains the geospatial data that will be used to resolve the geoquery.
          By default, will be location (see clause 4.7). It shall be ignored unless a geoquery is present.
        explode: true
        in: query
        name: geoproperty
        required: false
        schema:
          default: location
          enum:
          - location
          - observationSpace
          - operationSpace
          type: string
        style: form
      - description: "4.5.16.1 Top-level \"geometry\" field selection algorithm. \n\
          A parameter of the request (named \"geometryProperty\") may be used to indicate\
          \ the name of the GeoProperty to be selected. \nIf this parameter is not\
          \ present, then the default name of \"location\" shall be used.\n\nIn the\
          \ case of GeoJSON Entity representation, this parameter indicates which\
          \ GeoProperty to use\nfor the toplevel geometry field.\n"
        explode: true
        in: query
        name: geometryProperty
        required: false
        schema:
          type: string
        style: form
      - description: |
          It is used to reduce languageMaps to a string or string array property in a single preferred language.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: |
          Scope query (see clause 4.19).
        explode: true
        in: query
        name: scopeQ
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.10 Pagination behaviour. It defines the limit to the number of NGSI-LD Elements that shall be retrieved
          at a maximum as mandated by clause 5.5.9. The value 0 is only allowed in combination with
          the count URI parameter.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          6.3.13 Counting number of results. If true, then a special HTTP header (NGSILD-Results-Count) is set in
          the response. Regardless of how many entities are actually returned (maybe due to the "limit" URI parameter),
          the total number of matching results (e.g. number of Entities) is returned.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/queryEntity_options_parameter_inner'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/queryEntity_200_response_inner'
                type: array
            application/json+ld:
              schema:
                items:
                  $ref: '#/components/schemas/queryEntity_200_response_inner_1'
                type: array
            application/geo+json:
              schema:
                $ref: '#/components/schemas/FeatureCollection'
          description: |
            A response body containing the query result as a list of entities, unless the Accept Header
            indicates that the Entities are to be rendered as GeoJSON.

            If the Accept Header indicates that the Entities are to be rendered as GeoJSON, a response body
            containing the query result as GeoJSON FeatureCollection is returned.
          headers:
            NGSILD-Results-Count:
              $ref: '#/components/headers/NGSILD-Results-Count'
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "501":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "It is used by Registered Context Sources to indicate that\
            \ the data format \nof the request is unsupported see clause 6.3.7.\n"
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Query entities
      tags:
      - Context Information Consumption
      x-accepts:
      - application/geo+json
      - application/json
      - application/json+ld
    post:
      description: |
        5.6.1 Create Entity

        This operation allows creating a new NGSI-LD Entity.
      operationId: createEntity
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queryEntity_200_response_inner'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/queryEntity_200_response_inner_1'
        description: |
          Payload body in the request contains a JSON-LD object which represents the entity that is to be created.
      responses:
        "201":
          description: |
            The HTTP response shall include a "Location" HTTP header that contains
            the resource URI of the created entity resource.
          headers:
            Location:
              $ref: '#/components/headers/Location'
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the entity or an exclusive or redirect
            registration defining the entity already exists, see clause 6.3.2.
            In the returned ProblemDetails structure, the "detail" attribute should
            convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the operation is not available,
            see clause 6.3.2. In the returned ProblemDetails structure,
            the "detail" attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Entity creation
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /entities/{entityId}:
    delete:
      description: |
        5.6.6 Delete entity.

        This operation allows deleting an NGSI-LD Entity.
      operationId: deleteEntity
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            No Content.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Entity deletion by id
      tags:
      - Context Information Provision
      x-accepts:
      - application/json
    get:
      description: |
        5.7.1 Retrieve Entity.

        This operation allows retrieving an NGSI-LD Entity.
      operationId: retrieveEntity
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          List of Attributes to be matched by the Entity and included in the response. If the Entity does not
          have any of the Attributes in attrs, then a 404 Not Found shall be retrieved. If attrs is not
          specified, no matching is performed and all Attributes related to the Entity shall be retrieved.
        explode: false
        in: query
        name: attrs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "4.5.16.1 Top-level \"geometry\" field selection algorithm. \n\
          A parameter of the request (named \"geometryProperty\") may be used to indicate\
          \ the name of the GeoProperty to be selected. \nIf this parameter is not\
          \ present, then the default name of \"location\" shall be used.\n\nIn the\
          \ case of GeoJSON Entity representation, this parameter indicates which\
          \ GeoProperty to use\nfor the toplevel geometry field.\n"
        explode: true
        in: query
        name: geometryProperty
        required: false
        schema:
          type: string
        style: form
      - description: |
          It is used to reduce languageMaps to a string or string array property in a single preferred language.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/queryEntity_options_parameter_inner'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryEntity_200_response_inner'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/queryEntity_200_response_inner_1'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: |
            A response body containing the JSON-LD representation of the target entity containing the selected
            Attributes, unless the Accept Header indicates that the Entity is to be rendered as GeoJSON.

            If the Accept Header indicates that the Entity is to be rendered as GeoJSON, a GeoJSON Feature is returned.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "501":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "It is used by Registered Context Sources to indicate that\
            \ the data format \nof the request is unsupported see clause 6.3.7.\n"
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Entity retrieval by id
      tags:
      - Context Information Consumption
      x-accepts:
      - application/geo+json
      - application/json
      - application/json+ld
    patch:
      description: |
        5.6.17 Merge Entity.

        This operation allows modification of an existing NGSI-LD Entity aligning to the JSON Merge Patch
        processing rules defined in IETF RFC 7396 by adding new Attributes (Properties or Relationships)
        or modifying or deleting existing Attributes associated with an existing Entity.
      operationId: mergeEntity
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.representation'
          type: array
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          When a merge operation applies to a pre-existing Attribute which previously contained an "observedAt"
          sub-attribute, the value held in this query parameter shall be used if no specific "observedAt"
          sub-Attribute is found in the payload body.
        explode: true
        in: query
        name: observedAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          It is used to reduce languageMaps to a string or string array property in a single preferred language.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/replaceEntity_request'
        description: |
          Entity Fragment containing a complete representation of the Attributes to be merged.
      responses:
        "204":
          description: |
            All the Attributes were merged successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Entity merge by id
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: |
        5.6.18 Replace Entity.

        This operation allows the modification of an existing NGSI-LD Entity
        by replacing all of the Attributes (Properties or Relationships).
      operationId: replaceEntity
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/replaceEntity_request'
        description: |
          Entity Fragment containing a complete representation of the Entity to be replaced.
      responses:
        "204":
          description: |
            The entity was replaced successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Entity replacement by id
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /entities/{entityId}/attrs:
    patch:
      description: |
        5.6.2 Update Entity Attributes.

        This operation allows modifying an existing NGSI-LD Entity by updating
        already existing Attributes (Properties or Relationships).
      operationId: updateEntity
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/replaceEntity_request'
        description: |
          Entity Fragment containing a complete representation of the Attributes to be updated.
      responses:
        "204":
          description: |
            All the Attributes were appended successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResult'
          description: |
            Only the Attributes included in the response payload body were successfully appended. If no Attributes
            were successfully updated the updated array of UpdateResult (see clause 5.2.18) will be empty.

            If the entity input data matches to a registration, the relevant parts of the request are
            forwarded as a distributed operation.

            In the case when an error response is received back from any distributed operation, a response
            body containing the result returned from each registration is returned in a UpdateResult structure.

            Names of the Attributes included in the UpdateResult structure are represented as Fully Qualified Names as per clause 6.3.6.

            Errors can occur whenever a distributed operation is unsupported, fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Update Attributes of an Entity
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      description: |
        5.6.3 Append Entity Attributes.

        This operation allows modifying an NGSI-LD Entity by adding
        new attributes (Properties or Relationships).
      operationId: appendAttrs
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.noOverwrite'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/replaceEntity_request'
        description: |
          Entity Fragment containing a complete representation of the Attributes to be added.
      responses:
        "204":
          description: |
            All the Attributes were appended successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResult'
          description: |
            Only the Attributes included in the response payload body were successfully appended. If no Attributes
            were successfully updated the updated array of UpdateResult (see clause 5.2.18) will be empty.

            If the entity input data matches to a registration, the relevant parts of the request are
            forwarded as a distributed operation.

            In the case when an error response is received back from any distributed operation, a response
            body containing the result returned from each registration is returned in a UpdateResult structure.

            Names of the Attributes included in the UpdateResult structure are represented as Fully Qualified Names as per clause 6.3.6.

            Errors can occur whenever a distributed operation is unsupported, fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Append Attributes to Entity
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /entities/{entityId}/attrs/{attrId}:
    delete:
      description: "5.6.5 Delete Entity Attribute.\n\nThis operation allows deleting\
        \ an NGSI-LD Entity's Attribute (Property or Relationship). \nThe Attribute\
        \ itself and all its children shall be deleted.\n"
      operationId: deleteAttrs
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Name of the attribute for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          If true, all attribute instances are deleted. Otherwise (default) only the Attribute instance specified
          by the datasetId is deleted. In case neither the deleteAll flag nor a datasetId is present,
          the default Attribute instance is deleted.
        explode: true
        in: query
        name: deleteAll
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          Specifies the datasetId of the dataset to be deleted.
        explode: true
        in: query
        name: datasetId
        required: false
        schema:
          format: uri
          type: string
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            The attribute was deleted successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResult'
          description: |
            Only the Attributes included in the response payload body were successfully appended. If no Attributes
            were successfully updated the updated array of UpdateResult (see clause 5.2.18) will be empty.

            If the entity input data matches to a registration, the relevant parts of the request are
            forwarded as a distributed operation.

            In the case when an error response is received back from any distributed operation, a response
            body containing the result returned from each registration is returned in a UpdateResult structure.

            Names of the Attributes included in the UpdateResult structure are represented as Fully Qualified Names as per clause 6.3.6.

            Errors can occur whenever a distributed operation is unsupported, fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Attribute delete
      tags:
      - Context Information Provision
      x-accepts:
      - application/json
    patch:
      description: |
        5.6.4 Partial Attribute Update.

        This operation allows performing a partial update on an NGSI-LD Entity's Attribute (Property or Relationship).
        A partial update only changes the elements provided in an Entity Fragment, leaving the rest as they are.
        This operation supports the deletion of sub-Attributes but not the deletion of the whole Attribute itself.
      operationId: updateAttrs
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Name of the attribute for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AttributeFragment'
      responses:
        "204":
          description: |
            The attribute was updated successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResult'
          description: |
            Only the Attributes included in the response payload body were successfully appended. If no Attributes
            were successfully updated the updated array of UpdateResult (see clause 5.2.18) will be empty.

            If the entity input data matches to a registration, the relevant parts of the request are
            forwarded as a distributed operation.

            In the case when an error response is received back from any distributed operation, a response
            body containing the result returned from each registration is returned in a UpdateResult structure.

            Names of the Attributes included in the UpdateResult structure are represented as Fully Qualified Names as per clause 6.3.6.

            Errors can occur whenever a distributed operation is unsupported, fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Partial Attribute Update
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: |
        5.6.19 Attribute Replace.

        This operation allows the replacement of a single Attribute (Property or Relationship)
        within an NGSI-LD Entity.
      operationId: replaceAttrs
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Name of the attribute for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AttributeFragment'
      responses:
        "204":
          description: |
            The attribute was replaced successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateResult'
          description: |
            Only the Attributes included in the response payload body were successfully appended. If no Attributes
            were successfully updated the updated array of UpdateResult (see clause 5.2.18) will be empty.

            If the entity input data matches to a registration, the relevant parts of the request are
            forwarded as a distributed operation.

            In the case when an error response is received back from any distributed operation, a response
            body containing the result returned from each registration is returned in a UpdateResult structure.

            Names of the Attributes included in the UpdateResult structure are represented as Fully Qualified Names as per clause 6.3.6.

            Errors can occur whenever a distributed operation is unsupported, fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Attribute replace
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /csourceRegistrations:
    get:
      description: |
        5.10.2 Query Context Source Registrations.

        This operation allows discovering context source registrations from an NGSI-LD system.
        The behaviour of the discovery of context source registrations differs significantly from
        the querying of entities as described in clause 5.7.2. The approach is that the client
        submits a query for entities as described in clause 5.7.2, but instead of receiving
        the Entity information, it receives a list of Context Source Registrations describing
        Context Sources that possibly have some of the requested Entity information. This means
        that the requested Entities and Attributes are matched against the 'information' property
        as described in clause 5.12.

        If no temporal query is present, only Context Source Registrations for Context Sources
        providing latest information, i.e. without specified time intervals, are considered.
        If a temporal query is present only Context Source Registrations with matching time intervals,
        i.e. observationInterval or managementInterval, are considered.
      operationId: queryCSR
      parameters:
      - description: List of entity ids to be retrieved.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uri
            type: string
          type: array
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Regular expression that shall be matched by entity ids.
        explode: true
        in: query
        name: idPattern
        required: false
        schema:
          format: pattern
          type: string
        style: form
      - description: |
          List of Attributes to be matched by the Entity and included in the response. If the Entity does not
          have any of the Attributes in attrs, then a 404 Not Found shall be retrieved. If attrs is not
          specified, no matching is performed and all Attributes related to the Entity shall be retrieved.
        explode: false
        in: query
        name: attrs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Query as per clause 4.9.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Context Source filter as per clause 4.9.
        explode: true
        in: query
        name: csf
        required: false
        schema:
          type: string
        style: form
      - description: |
          Geometry as per clause 4.10. It is part of geoquery. It shall be one if geometry or georel are present.
        explode: true
        in: query
        name: geometry
        required: false
        schema:
          enum:
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
          type: string
        style: form
      - description: |
          Geo relationship as per clause 4.10. It is part of geoquery. It shall be one if
          geometry or georel are present.
        explode: true
        in: query
        name: georel
        required: false
        schema:
          $ref: '#/components/schemas/queryEntity_georel_parameter'
        style: form
      - description: |
          Coordinates serialized as a string as per clause 4.10. It is part of geoquery.
          It shall be one if geometry or georel are present.
        explode: true
        in: query
        name: coordinates
        required: false
        schema:
          $ref: '#/components/schemas/queryEntity_coordinates_parameter'
        style: form
      - description: |
          The name of the Property that contains the geospatial data that will be used to resolve the geoquery.
          By default, will be location (see clause 4.7). It shall be ignored unless a geoquery is present.
        explode: true
        in: query
        name: geoproperty
        required: false
        schema:
          default: location
          enum:
          - location
          - observationSpace
          - operationSpace
          type: string
        style: form
      - description: |
          Allowed values: "observedAt", "createdAt", "modifiedAt" and "deletedAt".
          If not specified, the default is "observedAt". (See clause 4.8)
        explode: true
        in: query
        name: timeproperty
        required: false
        schema:
          default: observedAt
          enum:
          - observedAt
          - createdAt
          - modifiedAt
          - deletedAt
          type: string
        style: form
      - description: |
          Allowed values: "before", "after", "between"
        explode: true
        in: query
        name: timerel
        required: false
        schema:
          enum:
          - before
          - after
          - between
          type: string
        style: form
      - description: |
          It shall be a DateTime. Cardinality shall be 1 if timerel is present.
          String representing the timeAt parameter as defined by clause 4.11.
        explode: true
        in: query
        name: timeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          It shall be a DateTime. Cardinality shall be 1 if timerel is equal to "between".
          String representing the endTimeAt parameter as defined by clause 4.11.
        explode: true
        in: query
        name: endTimeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "4.5.16.1 Top-level \"geometry\" field selection algorithm. \n\
          A parameter of the request (named \"geometryProperty\") may be used to indicate\
          \ the name of the GeoProperty to be selected. \nIf this parameter is not\
          \ present, then the default name of \"location\" shall be used.\n\nIn the\
          \ case of GeoJSON Entity representation, this parameter indicates which\
          \ GeoProperty to use\nfor the toplevel geometry field.\n"
        explode: true
        in: query
        name: geometryProperty
        required: false
        schema:
          type: string
        style: form
      - description: |
          It is used to reduce languageMaps to a string or string array property in a single preferred language.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: |
          Scope query (see clause 4.19).
        explode: true
        in: query
        name: scopeQ
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: |
          6.3.10 Pagination behaviour. It defines the limit to the number of NGSI-LD Elements that shall be retrieved
          at a maximum as mandated by clause 5.5.9. The value 0 is only allowed in combination with
          the count URI parameter.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          6.3.13 Counting number of results. If true, then a special HTTP header (NGSILD-Results-Count) is set in
          the response. Regardless of how many entities are actually returned (maybe due to the "limit" URI parameter),
          the total number of matching results (e.g. number of Entities) is returned.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/queryCSR_200_response_inner'
                type: array
            application/json+ld:
              schema:
                items:
                  $ref: '#/components/schemas/queryCSR_200_response_inner_1'
                type: array
          description: |
            A response body containing the query result as an array of context source registrations.
          headers:
            NGSILD-Results-Count:
              $ref: '#/components/headers/NGSILD-Results-Count'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Discover Csource registrations
      tags:
      - Context Source Discovery
      x-accepts:
      - application/json
      - application/json+ld
    post:
      description: |
        5.9.2 Register Context Source.

        This operation allows registering a context source within an NGSI-LD system.
      operationId: createCSR
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCSR_request'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/createCSR_request_1'
        description: |
          Payload body in the request contains a JSON-LD object which represents
          the context source registration that is to be created.
      responses:
        "201":
          description: |
            The HTTP response shall include a "Location" HTTP header that contains
            the resource URI of the created context source registration resource.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the entity or an exclusive or redirect
            registration defining the entity already exists, see clause 6.3.2.
            In the returned ProblemDetails structure, the "detail" attribute should
            convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the operation is not available,
            see clause 6.3.2. In the returned ProblemDetails structure,
            the "detail" attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Csource registration creation
      tags:
      - Context Source Registration
      x-content-type: application/json
      x-accepts:
      - application/json
  /csourceRegistrations/{registrationId}:
    delete:
      description: |
        5.9.4 Delete Context Source Registration.

        This operation allows deleting a Context Source Registration from an NGSI-LD system.
      operationId: deleteCSR
      parameters:
      - description: Id (URI) of the context source registration.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            No Content.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Csource registration deletion by id
      tags:
      - Context Source Registration
      x-accepts:
      - application/json
    get:
      description: |
        5.10.1 Retrieve Context Source Registration.

        This operation allows retrieving a specific context source registration from an NGSI-LD system.
      operationId: retrieveCSR
      parameters:
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: Id (URI) of the context source registration.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryCSR_200_response_inner'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/queryCSR_200_response_inner_1'
          description: |
            A response body containing the JSON-LD representation of the target subscription.
          headers:
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Csource registration retrieval by id
      tags:
      - Context Source Discovery
      x-accepts:
      - application/json
      - application/json+ld
    patch:
      description: |
        5.9.3 Update Context Source Registration.

        This operation allows updating a Context Source Registration in an NGSI-LD system.
      operationId: updateCSR
      parameters:
      - description: Id (URI) of the context source registration.
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsourceRegistration'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/updateCSR_request'
        description: |
          Payload body in the request contains a JSON-LD object which represents
          the context source registration that is to be updated.
      responses:
        "204":
          description: |
            The context source registration was successfully updated.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Csource registration update by id
      tags:
      - Context Source Registration
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions:
    get:
      description: |
        5.8.4 Query Subscriptions.

        This operation allows querying existing Subscriptions.
      operationId: querySubscription
      parameters:
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: |
          6.3.10 Pagination behaviour. It defines the limit to the number of NGSI-LD Elements that shall be retrieved
          at a maximum as mandated by clause 5.5.9. The value 0 is only allowed in combination with
          the count URI parameter.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          6.3.13 Counting number of results. If true, then a special HTTP header (NGSILD-Results-Count) is set in
          the response. Regardless of how many entities are actually returned (maybe due to the "limit" URI parameter),
          the total number of matching results (e.g. number of Entities) is returned.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/querySubscription_200_response_inner'
                type: array
            application/json+ld:
              schema:
                items:
                  $ref: '#/components/schemas/querySubscription_200_response_inner_1'
                type: array
          description: |
            A response body containing a list of subscriptions.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Results-Count:
              $ref: '#/components/headers/NGSILD-Results-Count'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Retrieve list of Subscriptions
      tags:
      - Context Information Subscription
      x-accepts:
      - application/json
      - application/json+ld
    post:
      description: |
        5.8.1 Create subscription.

        This operation allows creating a new subscription.
      operationId: createSubscription
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Subscription'
      responses:
        "201":
          description: |
            The HTTP response shall include a "Location" HTTP header that contains the resource URI
            of the created subscription resource.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the entity or an exclusive or redirect
            registration defining the entity already exists, see clause 6.3.2.
            In the returned ProblemDetails structure, the "detail" attribute should
            convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
      summary: |
        Create Subscription
      tags:
      - Context Information Subscription
      x-content-type: application/json
      x-accepts:
      - application/json
  /subscriptions/{subscriptionId}:
    delete:
      description: |
        5.8.5 Delete Subscription.

        This operation allows deleting an existing subscription.
      operationId: deleteSubscription
      parameters:
      - description: Id (URI) of the concerned subscription.
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            No Content.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Subscription deletion by id
      tags:
      - Context Information Subscription
      x-accepts:
      - application/json
    get:
      description: |
        5.8.3 Retrieve Subscription.

        This operation allows retrieving an existing subscription.
      operationId: retrieveSubscription
      parameters:
      - description: Id (URI) of the concerned subscription.
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/querySubscription_200_response_inner'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/querySubscription_200_response_inner_1'
          description: |
            A response body containing the JSON-LD representation of the target subscription.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Subscription retrieval by id
      tags:
      - Context Information Subscription
      x-accepts:
      - application/json
      - application/json+ld
    patch:
      description: |
        5.8.2 Update Subscription.

        This operation allows updating an existing subscription.
      operationId: updateSubscription
      parameters:
      - description: Id (URI) of the concerned subscription.
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionFragment'
      responses:
        "204":
          description: |
            No Content.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Subscription update by id
      tags:
      - Context Information Subscription
      x-content-type: application/json
      x-accepts:
      - application/json
  /csourceSubscriptions:
    get:
      description: |
        5.11.5 Query Context Source Registration Subscriptions.

        This operation allows querying existing Context Source Registration Subscriptions.
      operationId: queryCSRSubscription
      parameters:
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: |
          6.3.10 Pagination behaviour. It defines the limit to the number of NGSI-LD Elements that shall be retrieved
          at a maximum as mandated by clause 5.5.9. The value 0 is only allowed in combination with
          the count URI parameter.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          6.3.13 Counting number of results. If true, then a special HTTP header (NGSILD-Results-Count) is set in
          the response. Regardless of how many entities are actually returned (maybe due to the "limit" URI parameter),
          the total number of matching results (e.g. number of Entities) is returned.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/querySubscription_200_response_inner'
                type: array
            application/json+ld:
              schema:
                items:
                  $ref: '#/components/schemas/querySubscription_200_response_inner_1'
                type: array
          description: |
            A response body containing a list of context source registration subscriptions.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Results-Count:
              $ref: '#/components/headers/NGSILD-Results-Count'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Retrieval of list of subscriptions to Csource registrations
      tags:
      - Context Source Registration Subscription
      x-accepts:
      - application/json
      - application/json+ld
    post:
      description: |
        5.11.2 Create Context Source Registration Subscription.

        This operation allows creating a new Context Source Registration Subscription.
      operationId: createCSRSubscription
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Subscription'
      responses:
        "201":
          description: |
            The HTTP response shall include a "Location" HTTP header that contains
            the resource URI of the created context source registration subscription resource.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the entity or an exclusive or redirect
            registration defining the entity already exists, see clause 6.3.2.
            In the returned ProblemDetails structure, the "detail" attribute should
            convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
      summary: |
        Create subscription to Csource registration
      tags:
      - Context Source Registration Subscription
      x-content-type: application/json
      x-accepts:
      - application/json
  /csourceSubscriptions/{subscriptionId}:
    delete:
      description: |
        5.11.6 Delete Context Source Registration Subscription.

        This operation allows deleting an existing Context Source Registration Subscription.
      operationId: deleteCSRSubscription
      parameters:
      - description: Id (URI) of the concerned subscription.
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            No Content.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Csource registration subscription deletion by id
      tags:
      - Context Source Registration Subscription
      x-accepts:
      - application/json
    get:
      description: |
        5.11.4 Retrieve Context Source Registration Subscription.

        This operation allows retrieving an existing Context Source Registration Subscription.
      operationId: retrieveCSRSubscription
      parameters:
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: Id (URI) of the concerned subscription.
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/querySubscription_200_response_inner'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/querySubscription_200_response_inner_1'
          description: |
            A response body containing the JSON-LD representation of
            the target context source registration subscription.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Csource registration subscription update by id
      tags:
      - Context Source Registration Subscription
      x-accepts:
      - application/json
      - application/json+ld
    patch:
      description: |
        5.11.3 Update Context Source Registration Subscription.

        This operation allows updating an existing Context Source Registration Subscription.
      operationId: updateCSRSubscription
      parameters:
      - description: Id (URI) of the concerned subscription.
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionFragment'
      responses:
        "204":
          description: |
            The context source registration subscription was successfully updated.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Csource registration subscription update by id
      tags:
      - Context Source Registration Subscription
      x-content-type: application/json
      x-accepts:
      - application/json
  /entityOperations/create:
    post:
      description: |
        5.6.7 Batch Entity Creation.

        This operation allows creating a batch of NGSI-LD Entities.
      operationId: createBatch
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner'
              type: array
          application/json+ld:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner_1'
              type: array
        description: |
          Array of entities to be created.
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: |
            If all entities have been successfully created, an array of Strings containing URIs
            is returned in the response. Each URI represents the Entity Id of a created entity.
            There is no restriction as to the order of the Entity Ids.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Batch Entity Creation
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /entityOperations/upsert:
    post:
      description: |
        5.6.8 Batch Entity Upsert.

        This operation allows creating a batch of NGSI-LD Entities, updating each of them if they already existed.
        In some database jargon this kind of operation is known as "upsert".
      operationId: upsertBatch
      parameters:
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.upsert'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner'
              type: array
          application/json+ld:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner_1'
              type: array
        description: |
          Array of entities to be created.
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: |
            If all entities not existing prior to this request have been successfully created and
            the others have been successfully updated, an array of String (with the URIs representing the
            Entity Ids of the created entities only) is returned in the response. There is no restriction as to
            the order of the Entity Ids. The merely updated entities do not take part in the response
            (corresponding to 204 No Content returned in the case of updates).
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "204":
          description: |
            If all entities already existed and are successfully updated, there is no payload body in the response.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Batch Entity Creation or Update (Upsert)
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /entityOperations/update:
    post:
      description: |
        5.6.9 Batch Entity Update.

        This operation allows updating a batch of NGSI-LD Entities.
      operationId: updateBatch
      parameters:
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.noOverwrite'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner'
              type: array
          application/json+ld:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner_1'
              type: array
        description: |
          Array of entities to be updated.
      responses:
        "204":
          description: "If all entities have been successfully updated, there is no\
            \ payload body in the response. \n"
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Batch Entity Update
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /entityOperations/delete:
    post:
      description: |
        5.6.10 Batch Entity Delete.

        This operation allows deleting a batch of NGSI-LD Entities.
      operationId: deleteBatch
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: |
          Array of String (URIs representing Entity IDs) to be deleted.
      responses:
        "204":
          description: |
            If all entities existed and have been successfully deleted, there is no payload body in the response.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Batch Entity Delete
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /entityOperations/query:
    post:
      description: |
        5.7.2 Query Entity (batch entity queries only).

        This operation allows querying an NGSI-LD system.
      operationId: queryBatch
      parameters:
      - description: |
          6.3.13 Counting number of results. If true, then a special HTTP header (NGSILD-Results-Count) is set in
          the response. Regardless of how many entities are actually returned (maybe due to the "limit" URI parameter),
          the total number of matching results (e.g. number of Entities) is returned.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.10 Pagination behaviour. It defines the limit to the number of NGSI-LD Elements that shall be retrieved
          at a maximum as mandated by clause 5.5.9. The value 0 is only allowed in combination with
          the count URI parameter.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/options.representation'
            - $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/queryBatch_request'
        description: Payload body in the request contains a JSON-LD object which represents
          the query to be performed.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/queryEntity_200_response_inner'
                type: array
            application/json+ld:
              schema:
                items:
                  $ref: '#/components/schemas/queryEntity_200_response_inner_1'
                type: array
            application/geo+json:
              schema:
                $ref: '#/components/schemas/FeatureCollection'
          description: |
            A response body containing the query result as a list of Entities.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Query entities based on POST
      tags:
      - Context Information Consumption
      x-content-type: application/json
      x-accepts:
      - application/geo+json
      - application/json
      - application/json+ld
  /entityOperations/merge:
    post:
      description: |
        5.6.20 Batch Entity Merge.

        This operation allows modification of a batch of NGSI-LD Entities according to the JSON Merge Patch
        processing rules defined in IETF RFC 7396 by adding new attributes (Properties or Relationships)
        or modifying or deleting existing attributes associated with an existing Entity.
      operationId: mergeBatch
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner'
              type: array
          application/json+ld:
            schema:
              items:
                $ref: '#/components/schemas/queryEntity_200_response_inner_1'
              type: array
        description: |
          Array of Entities to be merged.
      responses:
        "204":
          description: |
            If all entities have been successfully merged, there is no payload body in the response.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: |
            If the entity input data matches to a registration, the relevant parts of the request are forwarded
            as a distributed operation. In the case when an error response is received back from any distributed
            operation, a response body containing the result returned from each registration is returned in a
            BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
            fails or times out, see clause 6.3.17.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Batch Entity Merge
      tags:
      - Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /temporal/entities:
    get:
      description: |
        5.7.4 Query Temporal Evolution of Entities.

        This operation allows querying the temporal evolution of Entities present in an NGSI-LD system.
        It is similar to the operation defined by clause 5.7.2 (Query Entities) with the addition of a temporal query.

        *The query parameters timerel and timeAt are required.
      operationId: queryTemporal
      parameters:
      - description: List of entity ids to be retrieved.
        explode: false
        in: query
        name: id
        required: false
        schema:
          items:
            format: uri
            type: string
          type: array
        style: form
      - description: |
          Selection of Entity Types as per clause 4.17.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Regular expression that shall be matched by entity ids.
        explode: true
        in: query
        name: idPattern
        required: false
        schema:
          format: pattern
          type: string
        style: form
      - description: |
          List of Attributes to be matched by the Entity and included in the response. If the Entity does not
          have any of the Attributes in attrs, then a 404 Not Found shall be retrieved. If attrs is not
          specified, no matching is performed and all Attributes related to the Entity shall be retrieved.
        explode: false
        in: query
        name: attrs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Query as per clause 4.9.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: Context Source filter as per clause 4.9.
        explode: true
        in: query
        name: csf
        required: false
        schema:
          type: string
        style: form
      - description: |
          Geometry as per clause 4.10. It is part of geoquery. It shall be one if geometry or georel are present.
        explode: true
        in: query
        name: geometry
        required: false
        schema:
          enum:
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
          type: string
        style: form
      - description: |
          Geo relationship as per clause 4.10. It is part of geoquery. It shall be one if
          geometry or georel are present.
        explode: true
        in: query
        name: georel
        required: false
        schema:
          $ref: '#/components/schemas/queryEntity_georel_parameter'
        style: form
      - description: |
          Coordinates serialized as a string as per clause 4.10. It is part of geoquery.
          It shall be one if geometry or georel are present.
        explode: true
        in: query
        name: coordinates
        required: false
        schema:
          $ref: '#/components/schemas/queryEntity_coordinates_parameter'
        style: form
      - description: |
          The name of the Property that contains the geospatial data that will be used to resolve the geoquery.
          By default, will be location (see clause 4.7). It shall be ignored unless a geoquery is present.
        explode: true
        in: query
        name: geoproperty
        required: false
        schema:
          default: location
          enum:
          - location
          - observationSpace
          - operationSpace
          type: string
        style: form
      - description: |
          Allowed values: "observedAt", "createdAt", "modifiedAt" and "deletedAt".
          If not specified, the default is "observedAt". (See clause 4.8)
        explode: true
        in: query
        name: timeproperty
        required: false
        schema:
          default: observedAt
          enum:
          - observedAt
          - createdAt
          - modifiedAt
          - deletedAt
          type: string
        style: form
      - description: |
          Allowed values: "before", "after", "between"
        explode: true
        in: query
        name: timerel
        required: false
        schema:
          enum:
          - before
          - after
          - between
          type: string
        style: form
      - description: |
          It shall be a DateTime. Cardinality shall be 1 if timerel is present.
          String representing the timeAt parameter as defined by clause 4.11.
        explode: true
        in: query
        name: timeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          It shall be a DateTime. Cardinality shall be 1 if timerel is equal to "between".
          String representing the endTimeAt parameter as defined by clause 4.11.
        explode: true
        in: query
        name: endTimeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Only the last n instances, per Attribute, per Entity (under the specified time interval) shall be retrieved.
        explode: true
        in: query
        name: lastN
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: |
          It is used to reduce languageMaps to a string or string array property in a single preferred language.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: |
          4.5.19.1 Aggregated Temporal Representation of an Entity.

          Comma separated list of aggregation methods.

          Only applicable if aggregatedValues is present in the options parameter.
        explode: false
        in: query
        name: aggrMethods
        required: false
        schema:
          enum:
          - totalCount
          - distinctCount
          - sum
          - avg
          - min
          - max
          - stddev
          - sumsq
          type: string
        style: form
      - description: |
          If not specified, it defaults to a duration of 0 seconds and is interpreted as a duration spanning
          the whole time range specified by the temporal query.

          Only applicable if aggregatedValues is present in the options parameter.
        explode: false
        in: query
        name: aggrPeriodDuration
        required: false
        schema:
          default: "0"
          type: string
        style: form
      - description: |
          Scope query (see clause 4.19).
        explode: true
        in: query
        name: scopeQ
        required: false
        schema:
          type: string
        style: form
      - description: |
          6.3.10 Pagination behaviour. It defines the limit to the number of NGSI-LD Elements that shall be retrieved
          at a maximum as mandated by clause 5.5.9. The value 0 is only allowed in combination with
          the count URI parameter.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          6.3.13 Counting number of results. If true, then a special HTTP header (NGSILD-Results-Count) is set in
          the response. Regardless of how many entities are actually returned (maybe due to the "limit" URI parameter),
          the total number of matching results (e.g. number of Entities) is returned.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/queryTemporal_200_response_inner'
                type: array
            application/json+ld:
              schema:
                items:
                  $ref: '#/components/schemas/queryTemporal_200_response_inner_1'
                type: array
          description: |
            A response body containing the query result as a list of temporal representation of Entities.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Results-Count:
              $ref: '#/components/headers/NGSILD-Results-Count'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Query temporal evolution of Entities
      tags:
      - Temporal Context Information Consumption
      x-accepts:
      - application/json
      - application/json+ld
    post:
      description: |
        5.6.11 Create or Update Temporal Representation of an Entity.

        This operation allows creating or updating (by adding new Attribute instances)
        a Temporal Representation of an Entity.
      operationId: upsertTemporal
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EntityTemporal'
      responses:
        "201":
          description: |
            Upon creation success, the HTTP response shall include a "Location" HTTP header that contains
            the resource URI of the created entity resource.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "204":
          description: |
            Upon update success.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the operation is not available,
            see clause 6.3.2. In the returned ProblemDetails structure,
            the "detail" attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Temporal Representation of Entity creation
      tags:
      - Temporal Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /temporal/entities/{entityId}:
    delete:
      description: |
        5.6.16 Delete Temporal Representation of an Entity.

        This operation allows deleting the Temporal Representation of an Entity.
      operationId: deleteTemporal
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            No Content.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Temporal Representation of Entity deletion by id
      tags:
      - Temporal Context Information Provision
      x-accepts:
      - application/json
    get:
      description: |
        5.7.3 Retrieve Temporal Evolution of an Entity.

        This operation allows retrieving the temporal evolution of an NGSI-LD Entity.
      operationId: retrieveTemporal
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          List of Attributes to be matched by the Entity and included in the response. If the Entity does not
          have any of the Attributes in attrs, then a 404 Not Found shall be retrieved. If attrs is not
          specified, no matching is performed and all Attributes related to the Entity shall be retrieved.
        explode: false
        in: query
        name: attrs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Allowed values: "observedAt", "createdAt", "modifiedAt" and "deletedAt".
          If not specified, the default is "observedAt". (See clause 4.8)
        explode: true
        in: query
        name: timeproperty
        required: false
        schema:
          default: observedAt
          enum:
          - observedAt
          - createdAt
          - modifiedAt
          - deletedAt
          type: string
        style: form
      - description: |
          Allowed values: "before", "after", "between"
        explode: true
        in: query
        name: timerel
        required: false
        schema:
          enum:
          - before
          - after
          - between
          type: string
        style: form
      - description: |
          It shall be a DateTime. Cardinality shall be 1 if timerel is present.
          String representing the timeAt parameter as defined by clause 4.11.
        explode: true
        in: query
        name: timeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          It shall be a DateTime. Cardinality shall be 1 if timerel is equal to "between".
          String representing the endTimeAt parameter as defined by clause 4.11.
        explode: true
        in: query
        name: endTimeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Only the last n instances, per Attribute, per Entity (under the specified time interval) shall be retrieved.
        explode: true
        in: query
        name: lastN
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: |
          It is used to reduce languageMaps to a string or string array property in a single preferred language.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: |
          4.5.19.1 Aggregated Temporal Representation of an Entity.

          Comma separated list of aggregation methods.

          Only applicable if aggregatedValues is present in the options parameter.
        explode: false
        in: query
        name: aggrMethods
        required: false
        schema:
          enum:
          - totalCount
          - distinctCount
          - sum
          - avg
          - min
          - max
          - stddev
          - sumsq
          type: string
        style: form
      - description: |
          If not specified, it defaults to a duration of 0 seconds and is interpreted as a duration spanning
          the whole time range specified by the temporal query.

          Only applicable if aggregatedValues is present in the options parameter.
        explode: false
        in: query
        name: aggrPeriodDuration
        required: false
        schema:
          default: "0"
          type: string
        style: form
      - explode: false
        in: query
        name: options
        required: false
        schema:
          items:
            $ref: '#/components/schemas/options.sysAttrs'
          type: array
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryTemporal_200_response_inner'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/queryTemporal_200_response_inner_1'
          description: |
            A response body containing the JSON-LD temporal representation
            of the target entity containing the selected Attributes.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Temporal Representation of Entity retrieval by id
      tags:
      - Temporal Context Information Consumption
      x-accepts:
      - application/json
      - application/json+ld
  /temporal/entities/{entityId}/attrs:
    post:
      description: |
        5.6.12 Add Attributes to Temporal Representation of an Entity.

        This operation allows modifying a Temporal Representation of an Entity by adding new Attribute instances.
      operationId: appendAttrsTemporal
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EntityTemporalFragment'
      responses:
        "204":
          description: |
            All the Attributes were added successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Temporal Representation of Entity Attribute instance addition
      tags:
      - Temporal Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /temporal/entities/{entityId}/attrs/{attrId}:
    delete:
      description: |
        5.6.13 Delete Attributes from Temporal Representation of an Entity.

        This operation allows deleting an Attribute (Property or Relationship) of the Temporal Representation of an Entity.
        The Attribute itself and all its children shall be deleted.
      operationId: deleteAttrsTemporal
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Name of the attribute for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          If true, all attribute instances are deleted. Otherwise (default) only the Attribute instance specified
          by the datasetId is deleted. In case neither the deleteAll flag nor a datasetId is present,
          the default Attribute instance is deleted.
        explode: true
        in: query
        name: deleteAll
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          Specifies the datasetId of the dataset to be deleted.
        explode: true
        in: query
        name: datasetId
        required: false
        schema:
          format: uri
          type: string
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            The attribute was deleted successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Attribute from Temporal Representation of Entity deletion
      tags:
      - Temporal Context Information Provision
      x-accepts:
      - application/json
  /temporal/entities/{entityId}/attrs/{attrId}/{instanceId}:
    delete:
      description: |
        5.6.15 Delete Attribute Instance from Temporal Representation of an Entity.

        This operation allows deleting one Attribute instance (Property or Relationship),
        identified by its instanceId, of a Temporal Representation of an Entity.
        The Attribute itself and all its child elements shall be deleted. This operation enables
        the removal of individual Attribute instances that could have been previously added
        to the Temporal Representation of an Entity.
      operationId: deleteAttrInstanceTemporal
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Name of the attribute for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: Id (URI) identifying a particular Attribute instance.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            The attribute instance was delete successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Attribute Instance deletion by instance id
      tags:
      - Temporal Context Information Provision
      x-accepts:
      - application/json
    patch:
      description: |
        5.6.14 Partial Update Attribute instance in Temporal Representation of an Entity.

        This operation allows modifying a specific Attribute (Property or Relationship) instance,
        identified by its instanceId, of a Temporal Representation of an Entity.

        This operation enables the correction of wrong information that could have been previously added
        to the Temporal Representation of an Entity.
      operationId: updateAttrsTemporal
      parameters:
      - description: Id (URI) of the entity to be retrieved.
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Name of the attribute for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: Id (URI) identifying a particular Attribute instance.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/EntityTemporalFragment'
      responses:
        "204":
          description: |
            The attribute was updated successfully.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Attribute Instance update
      tags:
      - Temporal Context Information Provision
      x-content-type: application/json
      x-accepts:
      - application/json
  /temporal/entityOperations/query:
    post:
      description: |
        5.7.4 Query Temporal Evolution of Entities.

        This operation allows querying the temporal evolution of Entities present in an NGSI-LD system.
        It is similar to the operation defined by clause 5.7.2 (Query Entities) with the addition of a temporal query.
      operationId: temporalQueryBatch
      parameters:
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/QueryTemporal'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/queryTemporal_200_response_inner'
                type: array
            application/json+ld:
              schema:
                items:
                  $ref: '#/components/schemas/queryTemporal_200_response_inner_1'
                type: array
          description: |
            A response body containing the query result as a list of Entities.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Temporal Representation of Entity Query based on POST
      tags:
      - Temporal Context Information Consumption
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json+ld
  /types:
    get:
      description: |
        5.7.5 Retrieve Available Entity Types.

        This operation allows retrieving a list of NGSI-LD entity types for which
        entity instances exist within the NGSI-LD system.

        5.7.6  Retrieve Details of Available Entity Types.

        This operation allows retrieving a list with a detailed representation of
        NGSI-LD entity types for which entity instances exist within the NGSI-LD system.
      operationId: retrieveEntityTypes
      parameters:
      - description: |
          If true, then detailed entity type information represented as an array with
          elements of the Entity Type data structure (clause 5.2.25) is to be returned.
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveEntityTypes_200_response'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/retrieveEntityTypes_200_response_1'
          description: |
            A response body containing the JSON-LD representation of the EntityTypeList
            (clause 5.2.24) is to be returned, unless details=true is specified.

            If details=true is specified, a response body containing a JSON-LD array
            with elements of the EntityType data structure (clause 5.2.25) is to be returned.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: "Retrieve available entity types \n"
      tags:
      - Context Information Consumption
      x-accepts:
      - application/json
      - application/json+ld
  /types/{type}:
    get:
      description: |
        5.7.7 Retrieve Available Entity Type information.

        This operation allows retrieving detailed entity type information about a specified NGSI-LD entity
        type for which entity instances exist within the NGSI-LD system. The detailed representation includes
        the type name (as short name if available in the provided @context), the count of available entity
        instances and details about attributes that existing instances of this entity type have, including
        their name (as short name if available in the provided @context) and a list of types the attribute
        can have (e.g. Property, Relationship or GeoProperty).
      operationId: retrieveEntityTypeInfo
      parameters:
      - description: |
          Name of the entity type for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTypeInfo'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/retrieveEntityTypeInfo_200_response'
          description: |
            A response body containing the JSON-LD representation of
            the detailed information about the available entity type.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Details about available entity type
      tags:
      - Context Information Consumption
      x-accepts:
      - application/json
      - application/json+ld
  /attributes:
    get:
      description: "5.7.8 Retrieve Available Attributes.\n\nThis operation allows\
        \ retrieving a list of NGSI-LD attributes that belong to\nentity instances\
        \ existing within the NGSI- LD system.\n\n5.7.9 Retrieve Details of Available\
        \ Attributes.\n\nThis operation allows retrieving a list with a detailed representation\
        \ of NGSI-LD \nattributes that belong to entity instances existing within\
        \ the NGSI-LD system.\n"
      operationId: retrieveAttrTypes
      parameters:
      - description: |
          If true, then detailed attribute information represented as an array
          with elements of the Attribute data structure (clause 5.2.28) is to be returned.
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAttrTypes_200_response'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/retrieveAttrTypes_200_response_1'
          description: |
            A response body containing the JSON-LD representation of the AttributeList
            (clause 5.2.27) is to be returned, unless details=true is specified.

            If details=true is specified, a response body containing a JSON-LD array
            with elements of the Attribute data structure (clause 5.2.28) is to be returned.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Available attributes
      tags:
      - Context Information Consumption
      x-accepts:
      - application/json
      - application/json+ld
  /attributes/{attrId}:
    get:
      description: |
        5.7.10 Retrieve Available Attribute Information.

        This operation allows retrieving detailed attribute information about a specified NGSI-LD attribute
        that belongs to entity instances existing within the NGSI-LD system. The detailed representation includes
        the attribute name (as short name if available in the provided @context) and the type names
        for which entity instances exist that have the respective attribute, a count of available
        attribute instances and a list of types the attribute can have (e.g. Property, Relationship or GeoProperty).
      operationId: retrieveAttrTypeInfo
      parameters:
      - description: |
          Name of the attribute for which detailed information is to be retrieved.
          The Fully Qualified Name (FQN) as well as the short name can be used,
          given that the latter is part of the JSON-LD @context provided.
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
          considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
        explode: true
        in: query
        name: local
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.5 JSON-LD @context resolution

          In summary, from a developer's perspective, for POST, PATCH and PUT operations,
          if MIME type is "application/ld+json", then the associated @context shall be provided
          only as part of the request payload body. Likewise, if MIME type is "application/json",
          then the associated @context shall be provided only by using the JSON-LD Link header.
          No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
          Implementations should provide descriptive error messages when these situations arise.

          In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
        explode: true
        in: header
        name: Link
        required: false
        schema:
          format: uri
          type: string
        style: simple
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/retrieveAttrTypes_200_response_1_oneOf_1_inner'
          description: |
            A response body containing the JSON-LD representation of
            the detailed information about the available attribute.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Details about available attribute
      tags:
      - Context Information Consumption
      x-accepts:
      - application/json
      - application/json+ld
  /jsonldContexts:
    get:
      description: |
        5.13.3 List @contexts.

        With this operation a client can obtain a list of URLs that represent all of the @contexts
        stored in the local context store of the Broker. Each URL can be used to download the
        corresponding @context, and, in case the @context's kind is "Cached", it shall be
        the original URL the Broker downloaded the @context from.

        In case a "details" flag is set to true, the client obtains a list of JSON objects,
        each representing information (metadata) about an @context currently stored by the Broker.
        Each JSON object contains information about the @context's original URL (if any), its
        local identifier in the Broker's storage, its kind ("Cached", "Hosted" and "ImplicitlyCreated"),
        its creation timestamp, its expiry date (if "Cached"), and additional optional information.
      operationId: listContexts
      parameters:
      - description: Whether a list of URLs or a more detailed list of JSON Objects
          is requested.
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          Can be either "Cached", "Hosted", or "ImplicitlyCreated".
        explode: true
        in: query
        name: kind
        required: false
        schema:
          enum:
          - Cached
          - Hosted
          - ImplicitlyCreated
          type: string
        style: form
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listContexts_200_response'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/listContexts_200_response'
          description: |
            A response body containing a list of URLs or a list of JSON Objects, as defined in clause 5.13.3.5,
            representing metadata about stored @contexts.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        List all cached @contexts
      tags:
      - JSON-LD Context API
      x-accepts:
      - application/json
      - application/json+ld
    post:
      description: |
        5.13.2 Add @context.

        With this operation, a client can ask the Broker to store the full content
        of a specific @context, by giving it to the Broker.
      operationId: createContext
      parameters:
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createContext_request'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/createContext_request'
        description: |
          Payload body in the request contains a JSON object that has a root node named @context,
          which represents a JSON-LD "local" context.
      responses:
        "201":
          description: |
            The HTTP response shall include a "Location" HTTP header that contains the
            local URI of the added @context.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Add a user @context to the internal cache
      tags:
      - JSON-LD Context API
      x-content-type: application/json
      x-accepts:
      - application/json
  /jsonldContexts/{contextId}:
    delete:
      description: |
        5.13.5 Delete and Reload @context

        With this operation, a client supplies a local identifier to the Broker, indicating
        a stored @context, that the Broker shall remove from its storage. For @contexts of
        kind "Cached" this can also be the original URL the Broker downloaded the @context from.
        If the entry in the local storage that corresponds to the identifier is itself
        an array of @contexts, this operation will not delete the children,
        i.e. the @contexts in the array, but just the entry.
      operationId: deleteContext
      parameters:
      - description: |
          Local identifier of the @context to be managed (served or deleted). For @contexts of kind "Cached"
          this can also be the original URL the Broker downloaded the @context from.
        explode: false
        in: path
        name: contextId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: |
          Indicates to perform a download and replace of the @context, as specified in clause 5.13.5.4.
        explode: true
        in: query
        name: reload
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            No Content.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when re-downloading fails.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
      summary: |
        Delete one specific @context from internal cache, possibly re-inserting a freshly downloaded copy of it
      tags:
      - JSON-LD Context API
      x-accepts:
      - application/json
    get:
      description: |
        5.13.4 Serve @context.

        With this operation a client can obtain the full content of a specific @context
        (only for @contexts of kind "Hosted" or "ImplicitlyCreated"), which is currently
        stored in the Broker's internal storage, or its metadata (for all kinds of stored @contexts).
      operationId: retrieveContext
      parameters:
      - description: |
          Local identifier of the @context to be managed (served or deleted). For @contexts of kind "Cached"
          this can also be the original URL the Broker downloaded the @context from.
        explode: false
        in: path
        name: contextId
        required: true
        schema:
          $ref: '#/components/schemas/Path'
        style: simple
      - description: Whether a list of URLs or a more detailed list of JSON Objects
          is requested.
        explode: true
        in: query
        name: details
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
        explode: true
        in: header
        name: NGSILD-Tenant
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveContext_200_response'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/retrieveContext_200_response'
          description: |
            If the parameter details is False or missing, response body contains a JSON object that
            has a root node named @context, which represents a JSON-LD "local context".
            If the parameter details is True, response body contains a JSON object as defined
            in clause 5.13.4.5, which metadata of a JSON-LD "local context".
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the request or its content is incorrect,
            see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
            attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used when a client provided an entity identifier (URI) not known
            to the system, see clause 6.3.2.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: |
            It is used to indicate that the operation is not available,
            see clause 6.3.2. In the returned ProblemDetails structure,
            the "detail" attribute should convey more information about the error.
          headers:
            NGSILD-Tenant:
              $ref: '#/components/headers/NGSILD-Tenant'
            NGSILD-Warning:
              $ref: '#/components/headers/NGSILD-Warning'
      summary: |
        Serve one specific user @context
      tags:
      - JSON-LD Context API
      x-accepts:
      - application/json
      - application/json+ld
components:
  headers:
    Location:
      description: |
        Contains the resource URI of the created entity resource.
      explode: false
      schema:
        type: string
      style: simple
    NGSILD-Results-Count:
      description: |
        6.3.13 Counting number of results. The total number of matching results (e.g. number of Entities) is returned.
      explode: false
      schema:
        type: integer
      style: simple
    NGSILD-Tenant:
      description: |
        6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
      explode: false
      schema:
        type: string
      style: simple
    NGSILD-Warning:
      description: |
        6.3.17 Distributed Operations Caching and Timeout Behaviour
      explode: false
      required: false
      schema:
        enum:
        - 110 - Response is Stale
        - 111 - Revalidation Failed
        - 199 - Miscellaneous Warning
        - 299 - Miscellaneous Persistent Warning
        type: string
      style: simple
  parameters:
    Headers.Link:
      description: |
        6.3.5 JSON-LD @context resolution

        In summary, from a developer's perspective, for POST, PATCH and PUT operations,
        if MIME type is "application/ld+json", then the associated @context shall be provided
        only as part of the request payload body. Likewise, if MIME type is "application/json",
        then the associated @context shall be provided only by using the JSON-LD Link header.
        No mixes are allowed, i.e. mixing options shall result in HTTP response errors.
        Implementations should provide descriptive error messages when these situations arise.

        In contrast, GET and DELETE operations always take their input @context from the JSON-LD Link Header.
      explode: true
      in: header
      name: Link
      required: false
      schema:
        format: uri
        type: string
      style: simple
    Headers.ngsildTenant:
      description: |
        6.3.14 Tenant specification. The tenant to which the NGSI-LD HTTP operation is targeted.
      explode: true
      in: header
      name: NGSILD-Tenant
      required: false
      schema:
        type: string
      style: simple
    Path.attrId:
      description: |
        Name of the attribute for which detailed information is to be retrieved.
        The Fully Qualified Name (FQN) as well as the short name can be used,
        given that the latter is part of the JSON-LD @context provided.
      explode: false
      in: path
      name: attrId
      required: true
      schema:
        $ref: '#/components/schemas/Path'
      style: simple
    Path.contextId:
      description: |
        Local identifier of the @context to be managed (served or deleted). For @contexts of kind "Cached"
        this can also be the original URL the Broker downloaded the @context from.
      explode: false
      in: path
      name: contextId
      required: true
      schema:
        $ref: '#/components/schemas/Path'
      style: simple
    Path.entityId:
      description: Id (URI) of the entity to be retrieved.
      explode: false
      in: path
      name: entityId
      required: true
      schema:
        $ref: '#/components/schemas/Path'
      style: simple
    Path.instanceId:
      description: Id (URI) identifying a particular Attribute instance.
      explode: false
      in: path
      name: instanceId
      required: true
      schema:
        $ref: '#/components/schemas/Path'
      style: simple
    Path.registrationId:
      description: Id (URI) of the context source registration.
      explode: false
      in: path
      name: registrationId
      required: true
      schema:
        $ref: '#/components/schemas/Path'
      style: simple
    Path.subscriptionId:
      description: Id (URI) of the concerned subscription.
      explode: false
      in: path
      name: subscriptionId
      required: true
      schema:
        $ref: '#/components/schemas/Path'
      style: simple
    Path.type:
      description: |
        Name of the entity type for which detailed information is to be retrieved.
        The Fully Qualified Name (FQN) as well as the short name can be used,
        given that the latter is part of the JSON-LD @context provided.
      explode: false
      in: path
      name: type
      required: true
      schema:
        $ref: '#/components/schemas/Path'
      style: simple
    Query.aggrMethods:
      description: |
        4.5.19.1 Aggregated Temporal Representation of an Entity.

        Comma separated list of aggregation methods.

        Only applicable if aggregatedValues is present in the options parameter.
      explode: false
      in: query
      name: aggrMethods
      required: false
      schema:
        enum:
        - totalCount
        - distinctCount
        - sum
        - avg
        - min
        - max
        - stddev
        - sumsq
        type: string
      style: form
    Query.aggrPeriodDuration:
      description: |
        If not specified, it defaults to a duration of 0 seconds and is interpreted as a duration spanning
        the whole time range specified by the temporal query.

        Only applicable if aggregatedValues is present in the options parameter.
      explode: false
      in: query
      name: aggrPeriodDuration
      required: false
      schema:
        default: "0"
        type: string
      style: form
    Query.attrs:
      description: |
        List of Attributes to be matched by the Entity and included in the response. If the Entity does not
        have any of the Attributes in attrs, then a 404 Not Found shall be retrieved. If attrs is not
        specified, no matching is performed and all Attributes related to the Entity shall be retrieved.
      explode: false
      in: query
      name: attrs
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    Query.coordinates:
      description: |
        Coordinates serialized as a string as per clause 4.10. It is part of geoquery.
        It shall be one if geometry or georel are present.
      explode: true
      in: query
      name: coordinates
      required: false
      schema:
        $ref: '#/components/schemas/queryEntity_coordinates_parameter'
      style: form
    Query.count:
      description: |
        6.3.13 Counting number of results. If true, then a special HTTP header (NGSILD-Results-Count) is set in
        the response. Regardless of how many entities are actually returned (maybe due to the "limit" URI parameter),
        the total number of matching results (e.g. number of Entities) is returned.
      explode: true
      in: query
      name: count
      required: false
      schema:
        type: boolean
      style: form
    Query.csf:
      description: Context Source filter as per clause 4.9.
      explode: true
      in: query
      name: csf
      required: false
      schema:
        type: string
      style: form
    Query.datasetId:
      description: |
        Specifies the datasetId of the dataset to be deleted.
      explode: true
      in: query
      name: datasetId
      required: false
      schema:
        format: uri
        type: string
      style: form
    Query.details:
      description: Whether a list of URLs or a more detailed list of JSON Objects
        is requested.
      explode: true
      in: query
      name: details
      required: false
      schema:
        type: boolean
      style: form
    Query.deleteAll:
      description: |
        If true, all attribute instances are deleted. Otherwise (default) only the Attribute instance specified
        by the datasetId is deleted. In case neither the deleteAll flag nor a datasetId is present,
        the default Attribute instance is deleted.
      explode: true
      in: query
      name: deleteAll
      required: false
      schema:
        type: boolean
      style: form
    Query.endTimeAt:
      description: |
        It shall be a DateTime. Cardinality shall be 1 if timerel is equal to "between".
        String representing the endTimeAt parameter as defined by clause 4.11.
      explode: true
      in: query
      name: endTimeAt
      required: false
      schema:
        format: date-time
        type: string
      style: form
    Query.id:
      description: List of entity ids to be retrieved.
      explode: false
      in: query
      name: id
      required: false
      schema:
        items:
          format: uri
          type: string
        type: array
      style: form
    Query.idPattern:
      description: Regular expression that shall be matched by entity ids.
      explode: true
      in: query
      name: idPattern
      required: false
      schema:
        format: pattern
        type: string
      style: form
    Query.geometryProperty:
      description: "4.5.16.1 Top-level \"geometry\" field selection algorithm. \n\
        A parameter of the request (named \"geometryProperty\") may be used to indicate\
        \ the name of the GeoProperty to be selected. \nIf this parameter is not present,\
        \ then the default name of \"location\" shall be used.\n\nIn the case of GeoJSON\
        \ Entity representation, this parameter indicates which GeoProperty to use\n\
        for the toplevel geometry field.\n"
      explode: true
      in: query
      name: geometryProperty
      required: false
      schema:
        type: string
      style: form
    Query.geometry:
      description: |
        Geometry as per clause 4.10. It is part of geoquery. It shall be one if geometry or georel are present.
      explode: true
      in: query
      name: geometry
      required: false
      schema:
        enum:
        - Point
        - MultiPoint
        - LineString
        - MultiLineString
        - Polygon
        - MultiPolygon
        type: string
      style: form
    Query.geoproperty:
      description: |
        The name of the Property that contains the geospatial data that will be used to resolve the geoquery.
        By default, will be location (see clause 4.7). It shall be ignored unless a geoquery is present.
      explode: true
      in: query
      name: geoproperty
      required: false
      schema:
        default: location
        enum:
        - location
        - observationSpace
        - operationSpace
        type: string
      style: form
    Query.georel:
      description: |
        Geo relationship as per clause 4.10. It is part of geoquery. It shall be one if
        geometry or georel are present.
      explode: true
      in: query
      name: georel
      required: false
      schema:
        $ref: '#/components/schemas/queryEntity_georel_parameter'
      style: form
    Query.kind:
      description: |
        Can be either "Cached", "Hosted", or "ImplicitlyCreated".
      explode: true
      in: query
      name: kind
      required: false
      schema:
        enum:
        - Cached
        - Hosted
        - ImplicitlyCreated
        type: string
      style: form
    Query.lang:
      description: |
        It is used to reduce languageMaps to a string or string array property in a single preferred language.
      explode: true
      in: query
      name: lang
      required: false
      schema:
        type: string
      style: form
    Query.lastN:
      description: |
        Only the last n instances, per Attribute, per Entity (under the specified time interval) shall be retrieved.
      explode: true
      in: query
      name: lastN
      required: false
      schema:
        minimum: 1
        type: integer
      style: form
    Query.limit:
      description: |
        6.3.10 Pagination behaviour. It defines the limit to the number of NGSI-LD Elements that shall be retrieved
        at a maximum as mandated by clause 5.5.9. The value 0 is only allowed in combination with
        the count URI parameter.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        minimum: 0
        type: integer
      style: form
    Query.local:
      description: |
        6.3.18 Limiting Distributed Operations. If local=true then no Context Source Registrations shall be
        considered as matching to avoid cascading distributed operations (see clause 4.3.6.4).
      explode: true
      in: query
      name: local
      required: false
      schema:
        type: boolean
      style: form
    Query.observedAt:
      description: |
        When a merge operation applies to a pre-existing Attribute which previously contained an "observedAt"
        sub-attribute, the value held in this query parameter shall be used if no specific "observedAt"
        sub-Attribute is found in the payload body.
      explode: true
      in: query
      name: observedAt
      required: false
      schema:
        format: date-time
        type: string
      style: form
    Query.options.entities:
      explode: false
      in: query
      name: options
      required: false
      schema:
        items:
          $ref: '#/components/schemas/queryEntity_options_parameter_inner'
        type: array
      style: form
    Query.options.noOverwrite:
      explode: false
      in: query
      name: options
      required: false
      schema:
        items:
          $ref: '#/components/schemas/options.noOverwrite'
        type: array
      style: form
    Query.options.sysAttrs:
      explode: false
      in: query
      name: options
      required: false
      schema:
        items:
          $ref: '#/components/schemas/options.sysAttrs'
        type: array
      style: form
    Query.options.temporal:
      explode: false
      in: query
      name: options
      required: false
      schema:
        items:
          $ref: '#/components/schemas/options.temporal'
        type: array
      style: form
    Query.options.upsert:
      explode: false
      in: query
      name: options
      required: false
      schema:
        items:
          $ref: '#/components/schemas/options.upsert'
        type: array
      style: form
    Query.q:
      description: |
        Query as per clause 4.9.
      explode: true
      in: query
      name: q
      required: false
      schema:
        type: string
      style: form
    Query.reload:
      description: |
        Indicates to perform a download and replace of the @context, as specified in clause 5.13.5.4.
      explode: true
      in: query
      name: reload
      required: false
      schema:
        type: boolean
      style: form
    Query.scopeQ:
      description: |
        Scope query (see clause 4.19).
      explode: true
      in: query
      name: scopeQ
      required: false
      schema:
        type: string
      style: form
    Query.timeAt:
      description: |
        It shall be a DateTime. Cardinality shall be 1 if timerel is present.
        String representing the timeAt parameter as defined by clause 4.11.
      explode: true
      in: query
      name: timeAt
      required: false
      schema:
        format: date-time
        type: string
      style: form
    Query.timeproperty:
      description: |
        Allowed values: "observedAt", "createdAt", "modifiedAt" and "deletedAt".
        If not specified, the default is "observedAt". (See clause 4.8)
      explode: true
      in: query
      name: timeproperty
      required: false
      schema:
        default: observedAt
        enum:
        - observedAt
        - createdAt
        - modifiedAt
        - deletedAt
        type: string
      style: form
    Query.timerel:
      description: |
        Allowed values: "before", "after", "between"
      explode: true
      in: query
      name: timerel
      required: false
      schema:
        enum:
        - before
        - after
        - between
        type: string
      style: form
    Query.type:
      description: |
        Selection of Entity Types as per clause 4.17.
      explode: true
      in: query
      name: type
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    AttributeFragment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/replaceAttrs_request'
        application/json+ld:
          schema:
            $ref: '#/components/schemas/replaceAttrs_request_1'
    EntityTemporal:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityTemporal'
        application/json+ld:
          schema:
            $ref: '#/components/schemas/queryTemporal_200_response_inner_1'
    EntityTemporalFragment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityTemporal'
        application/json+ld:
          schema:
            $ref: '#/components/schemas/appendAttrsTemporal_request'
    QueryTemporal:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Query.temporal'
        application/json+ld:
          schema:
            $ref: '#/components/schemas/temporalQueryBatch_request'
    Subscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createSubscription_request'
        application/json+ld:
          schema:
            $ref: '#/components/schemas/createSubscription_request_1'
    SubscriptionFragment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Subscription'
        application/json+ld:
          schema:
            $ref: '#/components/schemas/updateSubscription_request'
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: |
        It is used to indicate that the request or its content is incorrect,
        see clause 6.3.2. In the returned ProblemDetails structure, the "detail"
        attribute should convey more information about the error.
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
        NGSILD-Warning:
          $ref: '#/components/headers/NGSILD-Warning'
    Conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: |
        It is used to indicate that the entity or an exclusive or redirect
        registration defining the entity already exists, see clause 6.3.2.
        In the returned ProblemDetails structure, the "detail" attribute should
        convey more information about the error.
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
    MultiStatus.BatchOperationResult:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchOperationResult'
      description: |
        If the entity input data matches to a registration, the relevant parts of the request are forwarded
        as a distributed operation. In the case when an error response is received back from any distributed
        operation, a response body containing the result returned from each registration is returned in a
        BatchOperationResult structure. Errors can occur whenever a distributed operation is unsupported,
        fails or times out, see clause 6.3.17.
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
        Location:
          $ref: '#/components/headers/Location'
    MultiStatus.UpdateResult:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateResult'
      description: |
        Only the Attributes included in the response payload body were successfully appended. If no Attributes
        were successfully updated the updated array of UpdateResult (see clause 5.2.18) will be empty.

        If the entity input data matches to a registration, the relevant parts of the request are
        forwarded as a distributed operation.

        In the case when an error response is received back from any distributed operation, a response
        body containing the result returned from each registration is returned in a UpdateResult structure.

        Names of the Attributes included in the UpdateResult structure are represented as Fully Qualified Names as per clause 6.3.6.

        Errors can occur whenever a distributed operation is unsupported, fails or times out, see clause 6.3.17.
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: |
        It is used when a client provided an entity identifier (URI) not known
        to the system, see clause 6.3.2.
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
        NGSILD-Warning:
          $ref: '#/components/headers/NGSILD-Warning'
    ServiceUnavailable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: |
        It is used when re-downloading fails.
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
    Unprocessable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: |
        It is used to indicate that the operation is not available,
        see clause 6.3.2. In the returned ProblemDetails structure,
        the "detail" attribute should convey more information about the error.
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
        NGSILD-Warning:
          $ref: '#/components/headers/NGSILD-Warning'
    NotImplemented:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "It is used by Registered Context Sources to indicate that the\
        \ data format \nof the request is unsupported see clause 6.3.7.\n"
      headers:
        NGSILD-Tenant:
          $ref: '#/components/headers/NGSILD-Tenant'
        NGSILD-Warning:
          $ref: '#/components/headers/NGSILD-Warning'
  schemas:
    AnyValue:
      description: Any JSON value as defined by IETF RFC 8259.
    options.noOverwrite:
      description: "6.16.3 For POST method associated to the operations \"Batch Entity\
        \ Update\" and \"Append Entity Attributes\", the \"noOvevwrite\" \noptions\
        \ query parameter indicates that no attribute overwrite shall be performed.\n"
      enum:
      - noOverwrite
      type: string
    options.representation:
      description: "6.3.7 Representation of Entities. \n\nWhen its value includes\
        \ the keyword \"normalized\", a normalized\nrepresentation of Entities shall\
        \ be provided as defined by clause 4.5.1, with Attributes returned\nin the\
        \ normalized representation as defined in clauses 4.5.2.2, 4.5.3.2 and 4.5.18.2.\n\
        \nWhen its value includes the keyword \"concise\", a concise lossless representation\
        \ of Entities shall\nbe provided as defined by clause 4.5.1. with Attributes\
        \ returned in the concise representation as\ndefined in clauses 4.5.2.3, 4.5.3.3\
        \ and 4.5.18.3. In this case the broker will return data in the\nmost concise\
        \ lossless representation possible, for example removing all Attribute \"\
        type\" members.\n\nWhen its value includes the keyword \"keyValues\" (or \"\
        simplified\" as a synonym), a simplified\nrepresentation of Entities shall\
        \ be provided as defined by clause 4.5.4.\n\nIf the Accept Header is set to\
        \ \"application/geo+json\" the response will be in simplified GeoJSON\nformat\
        \ as defined by clause 4.5.17.\n"
      enum:
      - normalized
      - concise
      - keyValues
      - simplified
      type: string
    options.sysAttrs:
      description: "6.3.11 Including system generated attributes.\n\nWhen its value\
        \ includes the keyword \"sysAttrs\", a representation of NGSI-LD Elements\
        \ shall be \nprovided so that the system generated attributes createdAt, modifiedAt\
        \ are included in the response \npayload body. In the case of temporal representations,\
        \ also the system generated attribute deletedAt \nis included, if the NGSI-LD\
        \ Element has been deleted.\n"
      enum:
      - sysAttrs
      type: string
    options.temporal:
      description: |
        6.3.12 Simplified or aggregated temporal representation of entities.

        When its value includes the keyword "temporalValues", a simplified temporal representation of
        entities shall be provided as defined by clause 4.5.8.

        When its value includes the keyword "aggregatedValues", an aggregated temporal representation of
        entities shall be provided as defined by clause 4.5.19.

        Only one of the two keywords can be present in the values of the parameter.
      enum:
      - temporalValues
      - aggregatedValues
      type: string
    options.upsert:
      default: replace
      description: |
        6.15.3 Upsert configuration.

        "replace". Indicates that all the existing Entity content shall be replaced (default mode);

        "update". Indicates that existing Entity content shall be updated.
      enum:
      - replace
      - update
      type: string
    CreatedAt:
      description: |
        It is defined as the temporal Property at which the Entity, Property or
        Relationship was entered into an NGSI-LD system.

        Entity creation timestamp. See clause 4.8.
      format: date-time
      type: string
    ModifiedAt:
      description: |
        It is defined as the temporal Property at which the Entity, Property or Relationship
        was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

        Entity last modification timestamp. See clause 4.8.
      format: date-time
      type: string
    DeletedAt:
      description: |
        It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

        Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
        Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
        and LanguageProperties (clause 5.2.32).
      format: date-time
      type: string
    ObservedAt:
      description: |
        It is defined as the temporal Property at which a certain Property or Relationship became valid or was observed.
        For example, a temperature Value was measured by the sensor at this point in time.
      format: date-time
      type: string
    Attribute:
      description: |
        5.2.28 This type represents the data needed to define the attribute information.
      example:
        typeNames:
        - typeNames
        - typeNames
        attributeTypes:
        - attributeTypes
        - attributeTypes
        attributeCount: 6.027456183070403
        attributeName: attributeName
        id: https://openapi-generator.tech
        type: Attribute
      properties:
        id:
          description: |
            Full URI of attribute name.
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - Attribute
          type: string
        attributeName:
          description: |
            Name of the attribute, short name if contained in @context.
          type: string
        attributeCount:
          description: |
            Number of attribute instances with this attribute name.
          type: number
        attributeTypes:
          description: |
            List of attribute types (e.g. Property, Relationship, GeoProperty) for which
            entity instances exist, which contain an attribute with this name.
          items:
            type: string
          type: array
        typeNames:
          description: |
            List of entity type names for which entity instances exist containing
            attributes that have the respective name.
          items:
            type: string
          type: array
      required:
      - attributeName
      - id
      - type
      type: object
    AttributeList:
      description: |
        5.2.27 This type represents the data needed to define the attribute
        list representation as mandated by clause 4.5.13.
      example:
        attributeList:
        - attributeList
        - attributeList
        id: https://openapi-generator.tech
        type: AttributeList
      properties:
        id:
          description: |
            Unique identifier for the attribute list.
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - AttributeList
          type: string
        attributeList:
          description: |
            List containing the attribute names.
          items:
            type: string
          type: array
      required:
      - attributeList
      - id
      - type
      type: object
    BatchEntityError:
      description: |
        5.2.17 This datatype represents an error raised (associated to a particular Entity) during
        the execution of a batch or distributed operation.
      example:
        registrationId: https://openapi-generator.tech
        entityId: https://openapi-generator.tech
        error:
          instance: instance
          detail: detail
          type: type
          title: title
          status: 6
      properties:
        entityId:
          description: |
            Entity Id corresponding to the Entity in error.
          format: uri
          type: string
        registrationId:
          description: |
            Registration Id corresponding to a failed distributed operation (optional).
          format: uri
          type: string
        error:
          $ref: '#/components/schemas/ProblemDetails'
      required:
      - entityId
      - error
      type: object
    BatchOperationResult:
      description: |
        5.2.16 The datatype represents the result of a batch operation.
      example:
        success:
        - https://openapi-generator.tech
        - https://openapi-generator.tech
        errors:
        - registrationId: https://openapi-generator.tech
          entityId: https://openapi-generator.tech
          error:
            instance: instance
            detail: detail
            type: type
            title: title
            status: 6
        - registrationId: https://openapi-generator.tech
          entityId: https://openapi-generator.tech
          error:
            instance: instance
            detail: detail
            type: type
            title: title
            status: 6
      properties:
        success:
          description: |
            Array of Entity Ids corresponding to the Entities that were successfully
            treated by the concerned operation.
          items:
            format: uri
            type: string
          type: array
        errors:
          description: |
            One array item per Entity in error.
          items:
            $ref: '#/components/schemas/BatchEntityError'
          type: array
      required:
      - errors
      - success
      type: object
    CsourceNotification:
      description: |
        5.3.2 This datatype represents the parameters that allow building a Context Source Notification
        to be sent to a subscriber.
      properties:
        id:
          description: |
            Csource notification identifier (JSON-LD @id).
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - CsourceNotification
          type: string
        subscriptionId:
          description: |
            Identifier of the subscription that originated the notification.
          format: uri
          type: string
        notifiedAt:
          description: |
            Timestamp corresponding to the instant when the notification was generated by the system.
          format: date-time
          type: string
        data:
          description: |
            The content of the notification as NGSI-LD entities. See clause 5.2.4.
          items:
            $ref: '#/components/schemas/CsourceRegistration'
          readOnly: true
          type: array
        triggerReason:
          description: |
            Indicates whether the Csources in the CsourceRegistration.Input(s) in data are newly matching
            (initial notification or creation), have been updated (but still match) or do not match any longer.

            • "newlyMatching" - describes the case that the notified Context Source Registration(s) newly
            match(es) the identified subscription. This value is used in the first notification and
            whenever a new Context Source Registration matching the Subscription has been registered,
            or an existing Context Source Registration that did not match before has been updated
            in such a way that it matches now.

            • "updated" - describes the case that the notified Context Source Registration that
            was part of a previous notification has been updated, but still matches the Subscription.

            • "noLongerMatching" - describes the case that the notified Context Source Registration
            that was part of a previous notification no longer matches the Subscription, i.e. as a result of
             an update or because it was deleted.
          enum:
          - newlyMatching
          - updated
          - noLongerMatching
          type: string
      required:
      - data
      - id
      - notifiedAt
      - subscriptionId
      - triggerReason
      - type
      type: object
    CsourceRegistration:
      additionalProperties:
        $ref: '#/components/schemas/AnyValue'
      description: |
        5.2.9 This type represents the data needed to register a new Context Source.
      example:
        observationInterval:
          endAt: 2000-01-23T04:56:07.000+00:00
          startAt: 2000-01-23T04:56:07.000+00:00
        timesFailed: 0.6027456183070403
        timesSent: 0.08008281904610115
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        registrationName: registrationName
        description: description
        type: ContextSourceRegistration
        lastSuccess: 2000-01-23T04:56:07.000+00:00
        mode: inclusive
        createdAt: 2000-01-23T04:56:07.000+00:00
        endpoint: https://openapi-generator.tech
        operations:
        - operations
        - operations
        refreshRate: refreshRate
        scope: CsourceRegistration_scope
        id: https://openapi-generator.tech
        tenant: tenant
        lastFailure: 2000-01-23T04:56:07.000+00:00
        contextSourceInfo:
        - value: value
          key: key
        - value: value
          key: key
        managementInterval:
          endAt: 2000-01-23T04:56:07.000+00:00
          startAt: 2000-01-23T04:56:07.000+00:00
        observationSpace: null
        expiresAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        operationSpace: null
        management:
          localOnly: true
          cacheDuration: cacheDuration
          cooldown: 1.6027456183070403
          timeout: 1.0800828190461012
        information:
        - entities:
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          propertyNames:
          - propertyNames
          - propertyNames
          relationshipNames:
          - relationshipNames
          - relationshipNames
        - entities:
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          propertyNames:
          - propertyNames
          - propertyNames
          relationshipNames:
          - relationshipNames
          - relationshipNames
        location:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          type: Point
        status: ok
      properties:
        id:
          description: |
            Unique registration identifier. (JSON-LD @id). There may be multiple registrations per
            Context Source, i.e. the id is unique per registration.
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type Use reserved type for identifying Context Source Registration.
          enum:
          - ContextSourceRegistration
          type: string
        registrationName:
          description: |
            A name given to this Context Source Registration.
          minLength: 1
          type: string
        description:
          description: |
            A description of this Context Source Registration.
          minLength: 1
          type: string
        information:
          description: |
            Describes the Entities, Properties and Relationships for which the
            Context Source may be able to provide information.
          items:
            $ref: '#/components/schemas/RegistrationInfo'
          minItems: 1
          type: array
        tenant:
          description: |
            Identifies the tenant that has to be specified in all requests to the Context Source that
            are related to the information registered in this Context Source Registration.
            If not present, the default tenant is assumed. Should only be present in systems supporting multi-tenancy.
          type: string
        observationInterval:
          $ref: '#/components/schemas/TimeInterval'
        managementInterval:
          $ref: '#/components/schemas/TimeInterval'
        location:
          $ref: '#/components/schemas/Geometry'
        observationSpace:
          $ref: '#/components/schemas/Geometry'
        operationSpace:
          $ref: '#/components/schemas/Geometry'
        expiresAt:
          description: |
            Provides an expiration date. When passed the Context Source Registration
            will become invalid and the Context Source might no longer be available.
          format: date-time
          type: string
        endpoint:
          description: |
            Endpoint expressed as dereferenceable URI through which the Context Source exposes its NGSI-LD interface.
          format: uri
          type: string
        contextSourceInfo:
          description: |
            Generic {key, value} array to convey optional information to provide
            when contacting the registered Context Source.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        scope:
          $ref: '#/components/schemas/CsourceRegistration_scope'
        mode:
          default: inclusive
          description: |
            The definition of the mode of distributed operation (see clause 4.3.6)
            supported by the registered Context Source.
          enum:
          - inclusive
          - exclusive
          - redirect
          - auxiliary
          type: string
        operations:
          description: |
            The definition limited subset of API operations supported by the registered Context Source.

            If undefined, the default set of operations is "federationOps" (see clause 4.20).
          items:
            type: string
          type: array
        refreshRate:
          description: |
            An indication of the likely period of time to elapse between updates at this registered endpoint.
            Brokers may optionally use this information to help implement caching.
          type: string
        management:
          $ref: '#/components/schemas/RegistrationManagementInfo'
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
        status:
          description: |
            Read-only. Status of the Registration. It shall be "ok" if the last attempt to perform a distributed
            operation succeeded. It shall be "failed" if the last attempt to perform a distributed operation failed.
          enum:
          - ok
          - failed
          readOnly: true
          type: string
        timesSent:
          description: |
            Number of times that the registration triggered a distributed operation, including failed attempts.
          minimum: 0
          readOnly: true
          type: number
        timesFailed:
          description: Number of times that the registration triggered a distributed
            operation request that failed.
          minimum: 0
          readOnly: true
          type: number
        lastSuccess:
          description: |
            Timestamp corresponding to the instant when the last successfully distributed operation was sent.
            Created on first successful operation.
          format: date-time
          readOnly: true
          type: string
        lastFailure:
          description: |
            Timestamp corresponding to the instant when the last distributed operation resulting in
            a failure (for instance, in the HTTP binding, an HTTP response code other than 2xx) was returned.
          format: date-time
          readOnly: true
          type: string
      type: object
    DateTimeValue:
      description: |
        Date representation as mandated by C.6 "Date Representation".
      properties:
        '@type':
          default: DateTime
          enum:
          - DateTime
          type: string
        '@value':
          format: date-time
          type: string
      required:
      - '@type'
      - '@value'
      type: object
    Endpoint:
      description: |
        5.2.15 This datatype represents the parameters that are required in order to define an endpoint for notifications.
      example:
        notifierInfo:
        - value: value
          key: key
        - value: value
          key: key
        receiverInfo:
        - value: value
          key: key
        - value: value
          key: key
        cooldown: 1.6027456183070403
        uri: https://openapi-generator.tech
        timeout: 1.0800828190461012
        accept: application/json
      properties:
        uri:
          description: |
            URI which conveys the endpoint which will receive the notification.
          format: uri
          type: string
        accept:
          description: |
            Intended to convey the MIME type of the notification payload body (JSON, or JSON-LD, or GeoJSON).
            If not present, default is "application/json".
          enum:
          - application/json
          - application/ld+json
          - application/geo+json
          type: string
        timeout:
          description: "Maximum period of time in milliseconds which may elapse before\
            \ a notification is assumed to have failed.\nThe NGSI-LD system can override\
            \ this value. This only applies if the binding protocol always returns\
            \ a \nresponse.\n"
          minimum: 1
          type: number
        cooldown:
          description: |
            Once a failure has occurred, minimum period of time in milliseconds which shall elapse before
            attempting to make a subsequent notification to the same endpoint after failure.
            If requests are received before the cooldown period has expired, no notification is sent.
          minimum: 1
          type: number
        receiverInfo:
          description: |
            Generic {key, value} array to convey optional information to the receiver.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        notifierInfo:
          description: |
            Generic {key, value} array to set up the communication channel.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
      required:
      - uri
      type: object
    Entity:
      additionalProperties:
        $ref: '#/components/schemas/Entity_value'
      description: |
        5.2.4 NGSI-LD Entity.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        operationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        scope: Entity_scope
        location:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        id: https://openapi-generator.tech
        type: Entity_type
        observationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
      properties:
        id:
          description: |
            Entity id.
          format: uri
          type: string
        type:
          $ref: '#/components/schemas/Entity_type'
        scope:
          $ref: '#/components/schemas/Entity_scope'
        location:
          $ref: '#/components/schemas/GeoProperty'
        observationSpace:
          $ref: '#/components/schemas/GeoProperty'
        operationSpace:
          $ref: '#/components/schemas/GeoProperty'
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
      type: object
    EntityInfo:
      description: |
        5.2.8 This type represents what Entities, Entity Types or group of Entity ids
        (as a regular expression pattern mandated by IEEE 1003.2TM) can be provided (by Context Sources).
      example:
        id: https://openapi-generator.tech
        type: EntityInfo_type
        idPattern: idPattern
      properties:
        id:
          description: |
            Entity identifier.
          format: uri
          type: string
        idPattern:
          description: |
            A regular expression which denotes a pattern that shall be matched by the provided or subscribed Entities.
          format: pattern
          type: string
        type:
          $ref: '#/components/schemas/EntityInfo_type'
      required:
      - type
      type: object
    EntitySelector:
      description: |
        5.2.33 This type selects which entity or group of entities are queried or subscribed to by Context Consumers.
        The `id` takes precedence over `idPattern`.
      example:
        id: https://openapi-generator.tech
        type: type
        idPattern: idPattern
      properties:
        id:
          description: |
            Entity identifier.
          format: uri
          type: string
        idPattern:
          description: |
            A regular expression which denotes a pattern that shall be matched by the provided or subscribed Entities.
          format: pattern
          type: string
        type:
          description: |
            Selector of Entity Type(s).
          type: string
      required:
      - type
      type: object
    EntityTemporal:
      additionalProperties:
        $ref: '#/components/schemas/EntityTemporal_value'
      description: |
        5.2.20 This is the same data type as mandated by clause 5.2.4 with the only deviation that
        the representation of Properties and Relationships shall be the temporal one
        (arrays of (Property or Relationship) instances represented by JSON-LD objects)
        as defined in clauses 4.5.7 and 4.5.8. Alternatively it is possible to specify
        the EntityTemporal by using the "Simplified Temporal Representation of an Entity",
        as defined in clause 4.5.9.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        operationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        scope: Entity_scope
        location:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        id: https://openapi-generator.tech
        type: Entity_type
        observationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
      properties:
        id:
          description: |
            Entity id.
          format: uri
          type: string
        type:
          $ref: '#/components/schemas/Entity_type'
        scope:
          $ref: '#/components/schemas/Entity_scope'
        location:
          $ref: '#/components/schemas/GeoProperty'
        observationSpace:
          $ref: '#/components/schemas/GeoProperty'
        operationSpace:
          $ref: '#/components/schemas/GeoProperty'
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
      type: object
    EntityType:
      description: |
        5.2.25 This type represents the data needed to define the elements of the detailed
        entity type list representation as mandated by clause 4.5.11.
      properties:
        id:
          description: |
            Fully Qualified Name (FQN) of the entity type being described.
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - EntityType
          type: string
        typeName:
          description: |
            Name of the entity type, short name if contained in @context.
          type: string
        attributeNames:
          description: |
            List containing the names of attributes that instances of the entity type can have.
          items:
            type: string
          type: array
      required:
      - attributeNames
      - id
      - type
      - typeName
      type: object
    EntityTypeInfo:
      description: |
        5.2.26 This type represents the data needed to define the detailed entity type
        information representation as mandated by clause 4.5.12.
      example:
        entityCount: 0.8008281904610115
        typeName: typeName
        id: https://openapi-generator.tech
        attributeDetails:
        - typeNames:
          - typeNames
          - typeNames
          attributeTypes:
          - attributeTypes
          - attributeTypes
          attributeCount: 6.027456183070403
          attributeName: attributeName
          id: https://openapi-generator.tech
          type: Attribute
        - typeNames:
          - typeNames
          - typeNames
          attributeTypes:
          - attributeTypes
          - attributeTypes
          attributeCount: 6.027456183070403
          attributeName: attributeName
          id: https://openapi-generator.tech
          type: Attribute
        type: EntityTypeInfo
      properties:
        id:
          description: |
            Fully Qualified Name (FQN) of the entity type being described.
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - EntityTypeInfo
          type: string
        typeName:
          description: |
            Name of the entity type, short name if contained in @context.
          type: string
        entityCount:
          description: |
            Number of entity instances of this entity type.
          type: number
        attributeDetails:
          description: |
            List of attributes that entity instances with the specified entity type can have.
          items:
            $ref: '#/components/schemas/Attribute'
          type: array
      required:
      - attributeDetails
      - entityCount
      - id
      - type
      - typeName
      type: object
    EntityTypeList:
      description: |
        5.2.24 This type represents the data needed to define the entity type
        list representation as mandated by clause 4.5.10.
      example:
        typeList:
        - typeList
        - typeList
        id: https://openapi-generator.tech
        type: EntityTypeList
      properties:
        id:
          description: |
            Unique identifier for the entity type list.
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - EntityTypeList
          type: string
        typeList:
          description: |
            List containing the entity type names.
          items:
            type: string
          type: array
      required:
      - id
      - type
      - typeList
      type: object
    Feature:
      description: |
        5.2.29 This data type represents a spatially bounded Entity in GeoJSON format, as mandated by IETF RFC 7946.
      properties:
        id:
          description: |
            Entity id.
          format: uri
          type: string
        type:
          description: |
            GeoJSON Type.
          enum:
          - Feature
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
        properties:
          $ref: '#/components/schemas/FeatureProperties'
        '@context':
          $ref: '#/components/schemas/LdContext'
      required:
      - geometry
      - id
      - properties
      - type
      type: object
    FeatureCollection:
      description: |
        5.2.30 This data type represents a list of spatially bounded
        Entities in GeoJSON format, as mandated by IETF RFC 7946.
      properties:
        type:
          description: |
            GeoJSON Type.
          enum:
          - FeatureCollection
          type: string
        features:
          description: |
            In the case that no matches are found, "features" will be an empty array.
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        '@context':
          $ref: '#/components/schemas/LdContext'
      required:
      - type
      type: object
    FeatureProperties:
      additionalProperties:
        $ref: '#/components/schemas/FeatureProperties_value'
      description: |
        5.2.31 This data type represents the type and the associated attributes
        (Properties and Relationships) of an Entity in GeoJSON format.
      properties:
        type:
          $ref: '#/components/schemas/FeatureProperties_type'
      required:
      - type
      type: object
    Geometry.position:
      description: |
        A single position.
      items:
        type: number
      maxItems: 3
      minItems: 2
      type: array
    Geometry.positionArray:
      description: |
        An array of positions.
      items:
        $ref: '#/components/schemas/Geometry.position'
      type: array
    Geometry.lineString:
      allOf:
      - $ref: '#/components/schemas/Geometry.positionArray'
      description: |
        An array of two or more positions.
    Geometry.linearRing:
      allOf:
      - $ref: '#/components/schemas/Geometry.positionArray'
      description: |
        An array of four positions where the first equals the last (i.e., a closed LineString).
    Geometry.polygon:
      description: |
        An array of linear rings.
      items:
        $ref: '#/components/schemas/Geometry.linearRing'
      type: array
    Geometry.Point:
      example:
        coordinates:
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
        type: Point
      properties:
        type:
          enum:
          - Point
          type: string
        coordinates:
          description: |
            A single position.
          items:
            type: number
          maxItems: 3
          minItems: 2
          type: array
      type: object
    Geometry.MultiPoint:
      properties:
        type:
          enum:
          - MultiPoint
          type: string
        coordinates:
          description: |
            An array of positions.
          items:
            $ref: '#/components/schemas/Geometry.position'
          type: array
      type: object
    Geometry.Polygon:
      properties:
        type:
          enum:
          - Polygon
          type: string
        coordinates:
          description: |
            An array of linear rings.
          items:
            $ref: '#/components/schemas/Geometry.linearRing'
          type: array
      type: object
    Geometry.LineString:
      properties:
        type:
          enum:
          - LineString
          type: string
        coordinates:
          $ref: '#/components/schemas/Geometry.lineString'
      type: object
    Geometry.MultiLineString:
      properties:
        type:
          enum:
          - MultiLineString
          type: string
        coordinates:
          items:
            $ref: '#/components/schemas/Geometry.lineString'
          type: array
      type: object
    Geometry.MultiPolygon:
      properties:
        type:
          enum:
          - MultiPolygon
          type: string
        coordinates:
          items:
            $ref: '#/components/schemas/Geometry.lineString'
          type: array
      type: object
    Geometry:
      description: |
        A valid GeoJSON geometry object (as mandated by RFC7946).
      oneOf:
      - $ref: '#/components/schemas/Geometry.Point'
      - $ref: '#/components/schemas/Geometry.MultiPoint'
      - $ref: '#/components/schemas/Geometry.Polygon'
      - $ref: '#/components/schemas/Geometry.LineString'
      - $ref: '#/components/schemas/Geometry.MultiLineString'
      - $ref: '#/components/schemas/Geometry.MultiPolygon'
    GeoProperty:
      additionalProperties:
        $ref: '#/components/schemas/GeoProperty_value'
      description: |
        5.2.7 NGSI-LD GeoProperty.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        instanceId: https://openapi-generator.tech
        observedAt: 2000-01-23T04:56:07.000+00:00
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        datasetId: https://openapi-generator.tech
        type: GeoProperty
        value:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          type: Point
        previousValue: null
      properties:
        type:
          default: GeoProperty
          description: |
            Node type.
          enum:
          - GeoProperty
          type: string
        value:
          $ref: '#/components/schemas/Geometry'
        observedAt:
          description: |
            It is defined as the temporal Property at which a certain Property or Relationship became valid or was observed.
            For example, a temperature Value was measured by the sensor at this point in time.
          format: date-time
          type: string
        datasetId:
          description: |
            It allows identifying a set or group of property values.
          format: uri
          type: string
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
        instanceId:
          description: |
            A URI uniquely identifying a Property instance,
            as mandated by (see clause 4.5.7). System generated.
          format: uri
          readOnly: true
          type: string
        previousValue:
          $ref: '#/components/schemas/Geometry'
      type: object
    GeoQuery:
      description: |
        5.2.13 This datatype represents a geoquery used for Subscriptions.
      example:
        geoproperty: geoproperty
        coordinates: GeoQuery_coordinates
        geometry: geometry
        georel: georel
      properties:
        geometry:
          description: |
            Type of the reference geometry.
          type: string
        coordinates:
          $ref: '#/components/schemas/GeoQuery_coordinates'
        georel:
          description: |
            Geo-relationship (near, within, etc.).
          type: string
        geoproperty:
          description: |
            Specifies the GeoProperty to which the GeoQuery is to be applied.
            If not present, the default GeoProperty is location.
          type: string
      required:
      - coordinates
      - geometry
      - georel
      type: object
    KeyValuePair:
      description: |
        5.2.22 This datatype represents the optional information that is required when contacting an endpoint for notifications.
      example:
        value: value
        key: key
      properties:
        key:
          description: |
            The key of the key/value pair.
          type: string
        value:
          description: |
            The value of the key/value pair.
          type: string
      required:
      - key
      - value
      type: object
    LanguageProperty:
      additionalProperties:
        $ref: '#/components/schemas/GeoProperty_value'
      description: |
        5.2.32 NGSI-LD LanguageProperty.
      properties:
        type:
          default: LanguageProperty
          description: |
            Node type.
          enum:
          - LanguageProperty
          type: string
        languageMap:
          description: |
            String Property Values defined in multiple natural languages.
          type: object
        observedAt:
          description: |
            It is defined as the temporal Property at which a certain Property or Relationship became valid or was observed.
            For example, a temperature Value was measured by the sensor at this point in time.
          format: date-time
          type: string
        datasetId:
          description: |
            It allows identifying a set or group of property values.
          format: uri
          type: string
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
        instanceId:
          description: |
            A URI uniquely identifying a Property instance,
            as mandated by (see clause 4.5.7). System generated.
          format: uri
          readOnly: true
          type: string
        previousLanguageMap:
          description: "Previous Language Property languageMap. Only used in notifications,\
            \ if the showChanges \noption is explicitly requested.\n"
          readOnly: true
          type: object
      type: object
    LdContext:
      description: |
        5.2.3 JSON-LD @context

        When encoding NGSI-LD Entities, Context Source Registrations, Subscriptions and Notifications,
        as pure JSON-LD (MIME type "application/ld+json"), a proper @context shall be included
        as a special member of the corresponding JSON-LD Object.
      oneOf:
      - format: uri
        type: string
      - type: object
      - items:
          $ref: '#/components/schemas/LdContext_oneOf_inner'
        type: array
    LdContextMetadata:
      description: |
        JSON object which represents information (metadata)
        about an @context currently stored by the Broker as defined in 5.13.3.5. It contains information about the @context's
        original URL (if any), its local identifier in the Broker's storage, its kind ("Cached", "Hosted" and "ImplicitlyCreated"),
        its creation timestamp, its expiry date (if "Cached"), and additional optional information.
      items:
        $ref: '#/components/schemas/LdContextMetadata_inner'
      type: array
    NotUpdatedDetails:
      description: |
        5.2.19 This datatype represents additional information provided by an implementation
        when an Attribute update did not happen.
      example:
        reason: reason
        registrationId: https://openapi-generator.tech
        attributeName: attributeName
      properties:
        attributeName:
          description: |
            Attribute name.
          type: string
        reason:
          description: |
            Reason for not having changed such Attribute.
          type: string
        registrationId:
          description: |
            Registration Id corresponding to a failed distributed operation (optional).
          format: uri
          type: string
      required:
      - attributeName
      - reason
      type: object
    Notification:
      description: |
        5.3.1 This datatype represents the parameters that allow building a notification to be sent to a subscriber.
      properties:
        id:
          description: |
            Notification identifier (JSON-LD @id). It shall be automatically generated by the implementation.
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - Notification
          type: string
        subscriptionId:
          description: |
            Identifier of the subscription that originated the notification.
          format: uri
          type: string
        notifiedAt:
          description: |
            Timestamp corresponding to the instant when the notification was generated by the system.
          format: date-time
          type: string
        data:
          $ref: '#/components/schemas/Notification_data'
      required:
      - data
      - id
      - notifiedAt
      - subscriptionId
      - type
      type: object
    NotificationParams:
      description: |
        5.2.14 This datatype represents the parameters that allow to convey the details of a notification.
      example:
        timesFailed: 1.5962133916683183
        endpoint:
          notifierInfo:
          - value: value
            key: key
          - value: value
            key: key
          receiverInfo:
          - value: value
            key: key
          - value: value
            key: key
          cooldown: 1.6027456183070403
          uri: https://openapi-generator.tech
          timeout: 1.0800828190461012
          accept: application/json
        lastNotification: 2000-01-23T04:56:07.000+00:00
        timesSent: 1.1465812980502945
        sysAttrs: false
        format: normalized
        showChanges: false
        attributes:
        - attributes
        - attributes
        lastFailure: 2000-01-23T04:56:07.000+00:00
        lastSuccess: 2000-01-23T04:56:07.000+00:00
        status: ok
      properties:
        attributes:
          description: |
            Entity Attribute Names (Properties or Relationships) to be included in the notification payload body.
            If undefined it will mean all Attributes.
          items:
            type: string
          minItems: 1
          type: array
        sysAttrs:
          default: false
          description: |
            If true, the system generated attributes createdAt and modifiedAt are included in
            the response payload body, in the case of a deletion also deletedAt.
          type: boolean
        format:
          description: |
            Conveys the representation format of the entities delivered at notification time.
            By default, it will be in the normalized format.
          enum:
          - normalized
          - concise
          - keyValues
          type: string
        showChanges:
          default: false
          description: |
            If true the previous value (previousValue) of Properties or languageMap (previousLanguageMap) of
            Language Properties or object (previousObject) of Relationships is provided in addition to the current one.
            This requires that it exists, i.e. in case of modifications and deletions,
             but not in the case of creations. showChanges cannot be true in case format is "keyValues".
          type: boolean
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        status:
          description: |
            Status of the Notification. It shall be "ok" if the last attempt to notify the subscriber succeeded.
            It shall be "failed" if the last attempt to notify the subscriber failed.
          enum:
          - ok
          - failed
          type: string
        timesSent:
          description: |
            Number of times that the notification has been sent. Provided by the system when
            querying the details of a subscription.
          minimum: 1
          type: number
        timesFailed:
          description: |
            Number of times an unsuccessful response (or timeout) has been received when deliverying the notification.
            Provided by the system when querying the details of a subscription.
          minimum: 1
          type: number
        lastNotification:
          description: |
            Timestamp corresponding to the instant when the last notification has been sent.
            Provided by the system when querying the details of a subscription.
          format: date-time
          type: string
        lastFailure:
          description: |
            Timestamp corresponding to the instant when the last notification resulting in failure
            (for instance, in the HTTP binding, an HTTP response code different than 200) has been sent.
            Provided by the system when querying the details of a subscription.
          format: date-time
          type: string
        lastSuccess:
          description: |
            Timestamp corresponding to the instant when the last successful (200 OK response) notification
            has been sent. Provided by the system when querying the details of a subscription.
          format: date-time
          type: string
      required:
      - endpoint
      type: object
    Path:
      description: Common schema for URI data type in path parameters.
      format: uri
      type: string
    ProblemDetails:
      description: |
        The definition of the general "ProblemDetails" data structure from
        IETF RFC 7807 is reproduced inthis structure. Compared to the
        general framework defined in IETF RFC 7807, the "status" and
        "detail" attributes are mandated to be included by the present document,
        to ensure that the response contains additional textual information about
        an error. IETF RFC 7807 foresees extensibility of the
        "ProblemDetails" type. It is possible that particular APIs in the present
        document, or particular implementations, define extensions to define
        additional attributes that provide more information about the error.
        The description column only provides some explanation of the meaning to
        Facilitate understanding of the design. For a full description, see
        IETF RFC 7807.
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 6
      properties:
        type:
          description: |
            A URI reference according to IETF RFC 3986 that identifies the
            problem type. It is encouraged that the URI provides human-readable
            documentation for the problem (e.g. using HTML) when dereferenced.
            When this member is not present, its value is assumed to be
            "about:blank".
          format: URI
          type: string
        title:
          description: |
            A short, human-readable summary of the problem type. It should not
            change from occurrence to occurrence of the problem, except for
            purposes of localization. If type is given and other than
            "about:blank", this attribute shall also be provided.
            A short, human-readable summary of the problem
            type.  It SHOULD NOT change from occurrence to occurrence of the
            problem, except for purposes of localization (e.g., using
            proactive content negotiation; see [RFC7231], Section 3.4).
          type: string
        status:
          description: |
            The HTTP status code for this occurrence of the problem.
            The HTTP status code ([RFC7231], Section 6) generated by the origin
            server for this occurrence of the problem.
          type: integer
        detail:
          description: "A human-readable explanation specific to this occurrence of\
            \ the\nproblem.\n\n*InvalidRequest: The request associated to the operation\
            \ is \nsyntactically invalid or includes wrong content. If an HTTP request\
            \ \nfor an operation contains parameters that are incompatible with the\
            \ \noperation, or it contains values of the \"options\" parameter that\
            \ are \nnot supported by the operation, an HTTP error response of type\
            \ \nInvalidRequest should be returned.  \n"
          type: string
        instance:
          description: |
            A URI reference that identifies the specific occurrence of the
            problem. It may yield further information if dereferenced.
          format: URI
          type: string
      required:
      - detail
      - status
      type: object
    Property:
      additionalProperties:
        $ref: '#/components/schemas/GeoProperty_value'
      description: |
        5.2.5 NGSI-LD Property.
      properties:
        type:
          default: Property
          description: |
            Node type.
          enum:
          - Property
          type: string
        value:
          $ref: '#/components/schemas/Property_value'
        observedAt:
          description: |
            It is defined as the temporal Property at which a certain Property or Relationship became valid or was observed.
            For example, a temperature Value was measured by the sensor at this point in time.
          format: date-time
          type: string
        unitCode:
          description: |
            Property Value's unit code.
          type: string
        datasetId:
          description: |
            It allows identifying a set or group of property values.
          format: uri
          type: string
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
        instanceId:
          description: |
            A URI uniquely identifying a Property instance,
            as mandated by (see clause 4.5.7). System generated.
          format: uri
          readOnly: true
          type: string
        previousValue:
          $ref: '#/components/schemas/Property_previousValue'
      type: object
    Query:
      description: |
        5.2.23 This datatype represents the information that is required in order to convey
        a query when a "Query Entities" operation is to be performed (as per clause 5.7.2).
      example:
        geoQ:
          geoproperty: geoproperty
          coordinates: GeoQuery_coordinates
          geometry: geometry
          georel: georel
        q: q
        entities:
        - id: https://openapi-generator.tech
          type: type
          idPattern: idPattern
        - id: https://openapi-generator.tech
          type: type
          idPattern: idPattern
        csf: csf
        scopeQ: scopeQ
        type: Query
        lang: lang
        attrs:
        - attrs
        - attrs
      properties:
        type:
          description: |
            JSON-LD @type.
          enum:
          - Query
          type: string
        entities:
          description: |
            Entity ids, id pattern and Entity types that shall be matched by Entities in order to be retrieved.
          items:
            $ref: '#/components/schemas/EntitySelector'
          minItems: 1
          type: array
        attrs:
          description: |
            List of Attributes that shall be matched by Entities in order to be retrieved.
            If not present all Attributes will be retrieved.
          items:
            type: string
          minItems: 1
          type: array
        q:
          description: |
            Query that shall be matched by Entities in order to be retrieved.
          type: string
        geoQ:
          $ref: '#/components/schemas/GeoQuery'
        csf:
          description: |
            Context source filter that shall be matched by Context Source Registrations describing
            Context Sources to be used for retrieving Entities.
          type: string
        scopeQ:
          description: Scope query.
          type: string
        lang:
          description: Language filter to be applied to the query (clause 4.15).
          type: string
      required:
      - type
      type: object
    Query.temporal:
      allOf:
      - $ref: '#/components/schemas/Query'
      - properties:
          temporalQ:
            $ref: '#/components/schemas/TemporalQuery'
        type: object
      - required:
        - temporalQ
      description: |
        5.2.23 This datatype represents the information that is required in order to convey
        a query when a "Query Temporal Evolution of Entities" operation is to be performed (as pe clause 5.7.4).
    RegistrationInfo:
      description: |
        5.2.10 RegistrationInfo.
      example:
        entities:
        - id: https://openapi-generator.tech
          type: EntityInfo_type
          idPattern: idPattern
        - id: https://openapi-generator.tech
          type: EntityInfo_type
          idPattern: idPattern
        propertyNames:
        - propertyNames
        - propertyNames
        relationshipNames:
        - relationshipNames
        - relationshipNames
      properties:
        entities:
          description: |
            Describes the entities for which the CSource may be able to provide information.
          items:
            $ref: '#/components/schemas/EntityInfo'
          minItems: 1
          type: array
        propertyNames:
          description: |
            Describes the Properties that the CSource may be able to provide.
          items:
            type: string
          minItems: 1
          type: array
        relationshipNames:
          description: |
            Describes the Relationships that the CSource may be able to provide.
          items:
            type: string
          minItems: 1
          type: array
      type: object
    RegistrationManagementInfo:
      description: |
        5.2.34 This type represents the data to alter the default behaviour of a Context Broker when
        making a distributed operation request to a registered Context Source.
      example:
        localOnly: true
        cacheDuration: cacheDuration
        cooldown: 1.6027456183070403
        timeout: 1.0800828190461012
      properties:
        localOnly:
          description: |
            If localOnly=true then distributed operations associated to this Context Source Registration
            will act only on data held directly by the registered Context Source itself (see clause 4.3.6.4).
          type: boolean
        cacheDuration:
          description: |
            Minimal period of time which shall elapse between two consecutive context information
            consumption operations (as defined in clause 5.7) related to the same context data will occur.
            If the cacheDuration latency period has not been reached, a cached value for the
            entity or its attributes shall be returned where available.
          type: string
        timeout:
          description: |
            Maximum period of time in milliseconds which may elapse before a
            forwarded request is assumed to have failed.
          minimum: 1
          type: number
        cooldown:
          description: |
            Minimum period of time in milliseconds which shall elapse before attempting
            to make a subsequent forwarded request to the same endpoint after failure.
            If requests are received before the cooldown period has expired, a timeout error
            response for the registration is automatically returned.
          minimum: 1
          type: number
      type: object
    Relationship:
      additionalProperties:
        $ref: '#/components/schemas/GeoProperty_value'
      description: |
        5.2.6 NGSI-LD Relationship.
      properties:
        type:
          default: Relationship
          description: |
            Node type.
          enum:
          - Relationship
          type: string
        object:
          description: |
            Relationship's target object.
          format: uri
          type: string
        observedAt:
          description: |
            It is defined as the temporal Property at which a certain Property or Relationship became valid or was observed.
            For example, a temperature Value was measured by the sensor at this point in time.
          format: date-time
          type: string
        datasetId:
          description: |
            It allows identifying a set or group of target relationship objects.
          format: uri
          type: string
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
        instanceId:
          description: |
            A URI uniquely identifying a Relationship instance
            (see clause 4.5.8). System generated.
          format: uri
          readOnly: true
          type: string
        previousObject:
          description: "Previous Relationship's target object. Only used in notifications,\
            \ if the showChanges \noption is explicitly requested.\n"
          format: uri
          readOnly: true
          type: string
      type: object
    Subscription:
      oneOf:
      - $ref: '#/components/schemas/Subscription.OnChange'
      - $ref: '#/components/schemas/Subscription.Periodic'
    Subscription.Common:
      description: |
        5.2.12 This datatype represents a Context Subscription.
      properties:
        id:
          description: |
            Subscription identifier (JSON-LD @id).
          format: uri
          type: string
        type:
          description: |
            JSON-LD @type.
          enum:
          - Subscription
          type: string
        subscriptionName:
          description: |
            A (short) name given to this Subscription.
          type: string
        description:
          description: |
            Subscription description.
          type: string
        entities:
          description: |
            Entities subscribed.
          items:
            $ref: '#/components/schemas/EntitySelector'
          minItems: 1
          type: array
        notificationTrigger:
          description: |
            The notification triggers listed indicate what kind of changes shall trigger a notification.
            If not present, the default is the combination attributeCreated and attributeUpdated.
            entityUpdated is equivalent to the combination attributeCreated, attributeUpdated and attributeDeleted.
          items:
            enum:
            - entityCreated
            - entityUpdated
            - entityDeleted
            - attributeCreated
            - attributeUpdated
            - attributeDeleted
            type: string
          type: array
        q:
          description: |
            Query that shall be met by subscribed entities in order to trigger the notification.
          type: string
        geoQ:
          $ref: '#/components/schemas/GeoQuery'
        csf:
          description: |
            Context source filter that shall be met by Context Source Registrations describing Context Sources
            to be used for Entity Subscriptions.
          type: string
        isActive:
          default: true
          description: |
            Allows clients to temporarily pause the subscription by making it inactive.
            true indicates that the Subscription is under operation.
            false indicates that the subscription is paused and notifications shall not be delivered.
          type: boolean
        notification:
          $ref: '#/components/schemas/NotificationParams'
        expiresAt:
          description: |
            Expiration date for the subscription.
          format: date-time
          type: string
        temporalQ:
          $ref: '#/components/schemas/TemporalQuery'
        scopeQ:
          description: |
            Scope query.
          type: string
        lang:
          description: |
            Language filter to be applied to the query (clause 4.15).
          type: string
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
        status:
          description: |
            Read-only. Provided by the system when querying the details of a subscription.
          enum:
          - active
          - paused
          - expired
          readOnly: true
          type: string
        jsonldContext:
          description: "The dereferenceable URI of the JSON-LD @context to be used\
            \ when sending \na notification resulting from the subscription. If not\
            \ provided, the\n@context used for the subscription shall be used as a\
            \ default.\n"
          format: uri
          type: string
      type: object
    Subscription.Periodic:
      allOf:
      - $ref: '#/components/schemas/Subscription.Common'
      - properties:
          timeInterval:
            description: |
              Indicates that a notification shall be delivered periodically regardless of attribute changes.
              Actually, when the time interval (in seconds) specified in this value field is reached.
            minimum: 1
            type: number
        type: object
    Subscription.OnChange:
      allOf:
      - $ref: '#/components/schemas/Subscription.Common'
      - properties:
          watchedAttributes:
            description: |
              Watched Attributes (Properties or Relationships). If not defined it means any Attribute.
            items:
              type: string
            minItems: 1
            type: array
          throttling:
            description: |
              Minimal period of time in seconds which shall elapse between two consecutive notifications.
            minimum: 1
            type: number
        type: object
      example:
        jsonldContext: https://openapi-generator.tech
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: Subscription
        isActive: true
        expiresAt: 2000-01-23T04:56:07.000+00:00
        geoQ:
          geoproperty: geoproperty
          coordinates: GeoQuery_coordinates
          geometry: geometry
          georel: georel
        notificationTrigger:
        - entityCreated
        - entityCreated
        q: q
        notification:
          timesFailed: 1.5962133916683183
          endpoint:
            notifierInfo:
            - value: value
              key: key
            - value: value
              key: key
            receiverInfo:
            - value: value
              key: key
            - value: value
              key: key
            cooldown: 1.6027456183070403
            uri: https://openapi-generator.tech
            timeout: 1.0800828190461012
            accept: application/json
          lastNotification: 2000-01-23T04:56:07.000+00:00
          timesSent: 1.1465812980502945
          sysAttrs: false
          format: normalized
          showChanges: false
          attributes:
          - attributes
          - attributes
          lastFailure: 2000-01-23T04:56:07.000+00:00
          lastSuccess: 2000-01-23T04:56:07.000+00:00
          status: ok
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        throttling: 1.5637376656633328
        entities:
        - id: https://openapi-generator.tech
          type: type
          idPattern: idPattern
        - id: https://openapi-generator.tech
          type: type
          idPattern: idPattern
        subscriptionName: subscriptionName
        csf: csf
        watchedAttributes:
        - watchedAttributes
        - watchedAttributes
        scopeQ: scopeQ
        id: https://openapi-generator.tech
        lang: lang
        temporalQ:
          timerel: before
          endTimeAt: 2000-01-23T04:56:07.000+00:00
          timeAt: 2000-01-23T04:56:07.000+00:00
          timeproperty: observedAt
        status: active
    TemporalQuery:
      description: |
        5.2.21 This datatype represents a temporal query.
      example:
        timerel: before
        endTimeAt: 2000-01-23T04:56:07.000+00:00
        timeAt: 2000-01-23T04:56:07.000+00:00
        timeproperty: observedAt
      properties:
        timerel:
          description: |
            Allowed values: "before", "after" and "between".
          enum:
          - before
          - after
          - between
          type: string
        timeAt:
          description: |
            It shall be a DateTime.
          format: date-time
          type: string
        endTimeAt:
          description: |
            It shall be a DateTime. Cardinality shall be 1 if timerel is equal to "between".
          format: date-time
          type: string
        timeproperty:
          default: observedAt
          description: |
            Allowed values: "observedAt", "createdAt", "modifiedAt" and "deletedAt".
            If not specified, the default is "observedAt". (See clause 4.8).
          enum:
          - observedAt
          - createdAt
          - modifiedAt
          - deletedAt
          type: string
      required:
      - timeAt
      - timerel
      type: object
    TimeInterval:
      description: |
        5.2.11 NGSI-LD TimeInterval.
      example:
        endAt: 2000-01-23T04:56:07.000+00:00
        startAt: 2000-01-23T04:56:07.000+00:00
      properties:
        startAt:
          description: |
            Describes the start of the time interval.
          format: date-time
          type: string
        endAt:
          description: |
            Describes the end of the time interval. If not present the interval is open.
          format: date-time
          type: string
      required:
      - startAt
      type: object
    UpdateResult:
      description: |
        5.2.18 This datatype represents the result of Attribute update (append or update) operations
        in the NGSI-LD API regardless of whether local or distributed.
      example:
        notUpdated:
        - reason: reason
          registrationId: https://openapi-generator.tech
          attributeName: attributeName
        - reason: reason
          registrationId: https://openapi-generator.tech
          attributeName: attributeName
        updated:
        - updated
        - updated
      properties:
        updated:
          description: |
            List of Attributes (represented by their Name) that were appended or updated.
          items:
            type: string
          type: array
        notUpdated:
          description: |
            List which contains the Attributes (represented by their Name) that were not updated,
            together with the reason for not being updated.
          items:
            $ref: '#/components/schemas/NotUpdatedDetails'
          type: array
      required:
      - notUpdated
      - updated
      type: object
    VocabularyProperty:
      additionalProperties:
        $ref: '#/components/schemas/GeoProperty_value'
      description: |
        5.2.35 NGSI-LD VocabularyProperty.
      properties:
        type:
          default: VocabularyProperty
          description: |
            Node type.
          enum:
          - VocabularyProperty
          type: string
        vocab:
          $ref: '#/components/schemas/VocabularyProperty_vocab'
        previousVocab:
          $ref: '#/components/schemas/VocabularyProperty_previousVocab'
        observedAt:
          description: |
            It is defined as the temporal Property at which a certain Property or Relationship became valid or was observed.
            For example, a temperature Value was measured by the sensor at this point in time.
          format: date-time
          type: string
        datasetId:
          description: |
            It allows identifying a set or group of property values.
          format: uri
          type: string
        createdAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or
            Relationship was entered into an NGSI-LD system.

            Entity creation timestamp. See clause 4.8.
          format: date-time
          type: string
        modifiedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship
            was last modified in an NGSI-LD system, e.g. in order to correct a previously entered incorrect value.

            Entity last modification timestamp. See clause 4.8.
          format: date-time
          type: string
        deletedAt:
          description: |
            It is defined as the temporal Property at which the Entity, Property or Relationship was deleted from an NGSI-LD system.

            Entity deletion timestamp. See clause 4.8. It is only used in notifications reporting deletions and in the
            Temporal Representation of Entities (clause 4.5.6), Properties (clause 4.5.7), Relationships (clause 4.5.8)
            and LanguageProperties (clause 5.2.32).
          format: date-time
          type: string
        instanceId:
          description: |
            A URI uniquely identifying a Property instance,
            as mandated by (see clause 4.5.7). System generated.
          format: uri
          readOnly: true
          type: string
      type: object
    Vehicle:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - properties:
          type:
            default: Vehicle
            description: NGSI-LD Entity identifier. It has to be Vehicle.
            enum:
            - Vehicle
            type: string
          brandName:
            $ref: '#/components/schemas/BrandName'
          street:
            $ref: '#/components/schemas/Street'
          isParked:
            $ref: '#/components/schemas/IsParked'
          category:
            $ref: '#/components/schemas/Category'
          tyreTreadDepths:
            $ref: '#/components/schemas/TyreTreadDepths'
          passengers:
            $ref: '#/components/schemas/Passengers'
          route:
            $ref: '#/components/schemas/Route'
        type: object
      - required:
        - brandName
        - isParked
        - type
      description: |
        NGSI-LD Entity Type that represents a vehicle.
    BrandName:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Property'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
      description: |
        NGSI-LD Property Type. The vehicle brand name.
    Street:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/LanguageProperty'
      - properties:
          languageMap:
            $ref: '#/components/schemas/Street_allOf_languageMap'
        required:
        - languageMap
        type: object
      description: |
        NGSI-LD LanguageProperty Type. The vehicle street.
    IsParked:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Relationship'
      - properties:
          object:
            format: uri
            type: string
          objectType:
            format: uri
            type: string
          providedBy:
            $ref: '#/components/schemas/ProvidedBy'
        required:
        - object
        type: object
      description: |
        NGSI-LD Relationship type to identify the parking where is the vehicle (i.e., the identifier of an NGSI-LD Entity of type OffStreetParking).
    ProvidedBy:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Relationship'
      - properties:
          object:
            format: uri
            type: string
        required:
        - object
        type: object
      description: |
        NGSI-LD Relationship type to identify the entity that provides something (i.e., the identifier of an NGSI-LD Entity of particular type).
    Category:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/VocabProperty'
      - properties:
          vocab:
            type: string
        required:
        - vocab
        type: object
      description: |
        NGSI-LD VocabProperty Type. The vehicle category.
    TyreTreadDepths:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ListProperty'
      - properties:
          valueList:
            items:
              type: string
            type: array
        required:
        - valueList
        type: object
      description: |
        NGSI-LD ListProperty Type. The vehicle tyre tread depths.
    Passengers:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Relationship'
      - properties:
          object:
            items:
              format: uri
              type: string
            type: array
          objectType:
            format: uri
            type: string
        required:
        - object
        type: object
      description: |
        NGSI-LD Relationship type to identify the passengers of the vehicle (i.e., the identifier of an NGSI-LD Entity of type Person).
    Route:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/ListRelationship'
      - properties:
          objectList:
            items:
              format: uri
              type: object
            type: array
          objectType:
            format: uri
            type: string
        required:
        - objectList
        type: object
      description: |
        NGSI-LD ListRelationship type to identify the route of the vehicle (i.e., the list of identifier of NGSI-LD Entities of type City).
    OffStreetParking:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - properties:
          type:
            default: OffStreetParking
            description: NGSI-LD Entity identifier. It has to be OffStreetParking.
            enum:
            - OffStreetParking
            type: string
          name:
            $ref: '#/components/schemas/Name'
          availableSpotNumbers:
            items:
              $ref: '#/components/schemas/AvailableSpotNumber'
            type: array
          totalSpotNumber:
            $ref: '#/components/schemas/TotalSpotNumber'
          operatedBy:
            $ref: '#/components/schemas/OperatedBy'
        type: object
      - required:
        - name
        - operatedBy
        - type
      description: |
        NGSI-LD Entity Type that represents a parking.
    AvailableSpotNumber:
      additionalProperties: false
      allOf:
      - $ref: '#components/schemas/Property'
      - properties:
          value:
            type: number
          reliability:
            $ref: '#/components/schemas/Reliability'
          providedBy:
            $ref: '#/components/schemas/ProvidedBy'
        required:
        - value
        type: object
      description: |
        NGSI-LD Property Type. The available spot number.
    Reliability:
      additionalProperties: false
      allOf:
      - $ref: '#components/schemas/Property'
      - properties:
          value:
            type: number
        required:
        - value
        type: object
      description: |
        NGSI-LD Property Type. The reliability of the available spot number.
    TotalSpotNumber:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Property'
      - properties:
          value:
            type: number
        required:
        - value
        type: object
      description: |
        NGSI-LD Property Type. The total spot number.
    Person:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - properties:
          type:
            default: Person
            description: NGSI-LD Entity identifier. It has to be Person.
            enum:
            - Person
            type: string
          name:
            $ref: '#/components/schemas/Name'
        type: object
      - required:
        - name
        - type
      description: |
        NGSI-LD Entity Type that represents a person.
    City:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - properties:
          type:
            default: City
            description: NGSI-LD Entity identifier. It has to be City.
            enum:
            - City
            type: string
          name:
            $ref: '#/components/schemas/Name'
        type: object
      - required:
        - name
        - type
      description: |
        NGSI-LD Entity Type that represents a city.
    Camera:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - properties:
          type:
            default: Camera
            description: NGSI-LD Entity identifier. It has to be Camera.
            enum:
            - Camera
            type: string
          name:
            $ref: '#/components/schemas/Name'
        type: object
      - required:
        - name
        - type
      description: |
        NGSI-LD Entity Type that represents a camera.
    Company:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - properties:
          type:
            default: Company
            description: NGSI-LD Entity identifier. It has to be Company.
            enum:
            - Company
            type: string
          name:
            $ref: '#/components/schemas/Name'
        type: object
      - required:
        - name
        - type
      description: |
        NGSI-LD Entity Type that represents a company.
    Name:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Property'
      - properties:
          value:
            type: string
        required:
        - value
        type: object
      description: |
        NGSI-LD Property Type. The natural name of an entity.
    OperatedBy:
      additionalProperties: false
      allOf:
      - {}
      - properties:
          object:
            type: string
        required:
        - object
        type: object
      description: |
        NGSI-LD Relationship type to identify the company that operates the parking (i.e., the identifier of an NGSI-LD Entity of type Company).
    queryEntity_georel_parameter:
      oneOf:
      - enum:
        - equals
        - disjoint
        - intersects
        - within
        - contains
        - overlaps
        type: string
      - pattern: ^near;((maxDistance==\\d+)|(minDistance==\\d+))$
        type: string
    queryEntity_coordinates_parameter:
      oneOf:
      - $ref: '#/components/schemas/Geometry.position'
      - $ref: '#/components/schemas/Geometry.positionArray'
      - $ref: '#/components/schemas/Geometry.lineString'
      - $ref: '#/components/schemas/Geometry.linearRing'
      - $ref: '#/components/schemas/Geometry.polygon'
    queryEntity_options_parameter_inner:
      anyOf:
      - $ref: '#/components/schemas/options.representation'
      - $ref: '#/components/schemas/options.sysAttrs'
    queryEntity_200_response_inner:
      allOf:
      - $ref: '#/components/schemas/Entity'
      - required:
        - id
        - type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        operationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        scope: Entity_scope
        location:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        id: https://openapi-generator.tech
        type: Entity_type
        observationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
    queryEntity_200_response_inner_1:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/Entity'
      - required:
        - '@context'
        - id
        - type
    replaceEntity_request:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/Entity'
      - required:
        - '@context'
    replaceAttrs_request:
      oneOf:
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Relationship'
      - $ref: '#/components/schemas/GeoProperty'
      - $ref: '#/components/schemas/LanguageProperty'
      - $ref: '#/components/schemas/VocabularyProperty'
    replaceAttrs_request_1:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - oneOf:
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/Relationship'
        - $ref: '#/components/schemas/GeoProperty'
        - $ref: '#/components/schemas/LanguageProperty'
        - $ref: '#/components/schemas/VocabularyProperty'
      - required:
        - '@context'
    queryCSR_200_response_inner:
      allOf:
      - $ref: '#/components/schemas/CsourceRegistration'
      - required:
        - endpoint
        - id
        - information
        - type
      example:
        observationInterval:
          endAt: 2000-01-23T04:56:07.000+00:00
          startAt: 2000-01-23T04:56:07.000+00:00
        timesFailed: 0.5962133916683182
        timesSent: 0.14658129805029452
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        registrationName: registrationName
        description: description
        type: ContextSourceRegistration
        lastSuccess: 2000-01-23T04:56:07.000+00:00
        mode: inclusive
        createdAt: 2000-01-23T04:56:07.000+00:00
        endpoint: https://openapi-generator.tech
        operations:
        - operations
        - operations
        refreshRate: refreshRate
        scope: CsourceRegistration_scope
        id: https://openapi-generator.tech
        tenant: tenant
        lastFailure: 2000-01-23T04:56:07.000+00:00
        contextSourceInfo:
        - value: value
          key: key
        - value: value
          key: key
        managementInterval:
          endAt: 2000-01-23T04:56:07.000+00:00
          startAt: 2000-01-23T04:56:07.000+00:00
        observationSpace: null
        expiresAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        operationSpace: null
        management:
          localOnly: true
          cacheDuration: cacheDuration
          cooldown: 1.6027456183070403
          timeout: 1.0800828190461012
        information:
        - entities:
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          propertyNames:
          - propertyNames
          - propertyNames
          relationshipNames:
          - relationshipNames
          - relationshipNames
        - entities:
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          - id: https://openapi-generator.tech
            type: EntityInfo_type
            idPattern: idPattern
          propertyNames:
          - propertyNames
          - propertyNames
          relationshipNames:
          - relationshipNames
          - relationshipNames
        location:
          coordinates:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          type: Point
        status: ok
    queryCSR_200_response_inner_1:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/CsourceRegistration'
      - required:
        - '@context'
        - endpoint
        - id
        - information
        - type
    createCSR_request:
      allOf:
      - $ref: '#/components/schemas/CsourceRegistration'
      - required:
        - endpoint
        - information
        - type
    createCSR_request_1:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/CsourceRegistration'
      - required:
        - '@context'
        - endpoint
        - information
        - type
    updateCSR_request:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/CsourceRegistration'
      - required:
        - '@context'
    querySubscription_200_response_inner:
      allOf:
      - $ref: '#/components/schemas/Subscription'
      - required:
        - id
        - notification
        - type
      example: {}
    querySubscription_200_response_inner_1:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/Subscription'
      - required:
        - '@context'
        - id
        - notification
        - type
    createSubscription_request:
      allOf:
      - $ref: '#/components/schemas/Subscription'
      - required:
        - notification
        - type
    createSubscription_request_1:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/Subscription'
      - required:
        - '@context'
        - notification
        - type
    updateSubscription_request:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/Subscription'
      - required:
        - '@context'
    queryBatch_request:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/Query'
      - required:
        - '@context'
    queryTemporal_200_response_inner:
      allOf:
      - $ref: '#/components/schemas/EntityTemporal'
      - required:
        - id
        - type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        deletedAt: 2000-01-23T04:56:07.000+00:00
        operationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        scope: Entity_scope
        location:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
        id: https://openapi-generator.tech
        type: Entity_type
        observationSpace:
          createdAt: 2000-01-23T04:56:07.000+00:00
          deletedAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value:
            coordinates:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            type: Point
          previousValue: null
    queryTemporal_200_response_inner_1:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/EntityTemporal'
      - required:
        - '@context'
        - id
        - type
    appendAttrsTemporal_request:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/EntityTemporal'
      - required:
        - '@context'
    temporalQueryBatch_request:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        type: object
      - $ref: '#/components/schemas/Query.temporal'
      - required:
        - '@context'
    retrieveEntityTypes_200_response:
      oneOf:
      - $ref: '#/components/schemas/EntityTypeList'
      - items:
          $ref: '#/components/schemas/EntityType'
        type: array
    retrieveEntityTypes_200_response_1_oneOf:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        required:
        - '@context'
        type: object
      - $ref: '#/components/schemas/EntityTypeList'
    retrieveEntityTypes_200_response_1_oneOf_1_inner:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        required:
        - '@context'
        type: object
      - $ref: '#/components/schemas/EntityType'
    retrieveEntityTypes_200_response_1:
      oneOf:
      - $ref: '#/components/schemas/retrieveEntityTypes_200_response_1_oneOf'
      - items:
          $ref: '#/components/schemas/retrieveEntityTypes_200_response_1_oneOf_1_inner'
        type: array
    retrieveEntityTypeInfo_200_response:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        required:
        - '@context'
        type: object
      - $ref: '#/components/schemas/EntityTypeInfo'
    retrieveAttrTypes_200_response:
      oneOf:
      - $ref: '#/components/schemas/AttributeList'
      - items:
          $ref: '#/components/schemas/Attribute'
        type: array
    retrieveAttrTypes_200_response_1_oneOf:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        required:
        - '@context'
        type: object
      - $ref: '#/components/schemas/AttributeList'
    retrieveAttrTypes_200_response_1_oneOf_1_inner:
      allOf:
      - properties:
          '@context':
            $ref: '#/components/schemas/LdContext'
        required:
        - '@context'
        type: object
      - $ref: '#/components/schemas/Attribute'
    retrieveAttrTypes_200_response_1:
      oneOf:
      - $ref: '#/components/schemas/retrieveAttrTypes_200_response_1_oneOf'
      - items:
          $ref: '#/components/schemas/retrieveAttrTypes_200_response_1_oneOf_1_inner'
        type: array
    listContexts_200_response:
      oneOf:
      - items:
          format: uri
          type: string
        type: array
      - items:
          $ref: '#/components/schemas/LdContextMetadata'
        type: array
    createContext_request:
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
      required:
      - '@context'
      type: object
    retrieveContext_200_response_oneOf:
      example:
        '@context': https://openapi-generator.tech
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
      type: object
    retrieveContext_200_response:
      oneOf:
      - $ref: '#/components/schemas/retrieveContext_200_response_oneOf'
      - $ref: '#/components/schemas/LdContextMetadata'
    CsourceRegistration_scope:
      description: |
        Scopes (see clause 4.18) for which the Context Source has Entities.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    Entity_type:
      description: |
        Entity Type(s). Both short hand string(s) (type name) or URI(s) are allowed.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    Entity_scope:
      description: |
        Scope.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    Entity_value:
      oneOf:
      - $ref: '#/components/schemas/Property'
      - items:
          $ref: '#/components/schemas/Property'
        type: array
      - $ref: '#/components/schemas/Relationship'
      - items:
          $ref: '#/components/schemas/Relationship'
        type: array
      - $ref: '#/components/schemas/GeoProperty'
      - items:
          $ref: '#/components/schemas/GeoProperty'
        type: array
      - $ref: '#/components/schemas/LanguageProperty'
      - items:
          $ref: '#/components/schemas/LanguageProperty'
        type: array
      - $ref: '#/components/schemas/VocabularyProperty'
      - items:
          $ref: '#/components/schemas/VocabularyProperty'
        type: array
    EntityInfo_type:
      description: |
        Entity Type (or JSON array, in case of Entities with multiple Entity Types).
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    EntityTemporal_value:
      oneOf:
      - items:
          $ref: '#/components/schemas/Property'
        type: array
      - items:
          $ref: '#/components/schemas/Relationship'
        type: array
      - items:
          $ref: '#/components/schemas/GeoProperty'
        type: array
      - items:
          $ref: '#/components/schemas/LanguageProperty'
        type: array
      - items:
          $ref: '#/components/schemas/VocabularyProperty'
        type: array
    FeatureProperties_type:
      description: |
        Entity Type (or JSON array, in case of Entities with multiple Entity Types).
        Both short hand string (type name) or URI are allowed.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    FeatureProperties_value:
      oneOf:
      - $ref: '#/components/schemas/Property'
      - items:
          $ref: '#/components/schemas/Property'
        type: array
      - $ref: '#/components/schemas/Relationship'
      - items:
          $ref: '#/components/schemas/Relationship'
        type: array
      - $ref: '#/components/schemas/GeoProperty'
      - items:
          $ref: '#/components/schemas/GeoProperty'
        type: array
      - $ref: '#/components/schemas/LanguageProperty'
      - items:
          $ref: '#/components/schemas/LanguageProperty'
        type: array
    GeoProperty_value:
      oneOf:
      - $ref: '#/components/schemas/Property'
      - items:
          $ref: '#/components/schemas/Property'
        type: array
      - $ref: '#/components/schemas/Relationship'
      - items:
          $ref: '#/components/schemas/Relationship'
        type: array
    GeoQuery_coordinates:
      description: |
        Coordinates of the reference geometry. For the sake of JSON-LD compatibility.
        It can be encoded as a string as described in clause 4.7.1.
      oneOf:
      - type: string
      - items:
          type: object
        type: array
    LdContext_oneOf_inner:
      oneOf:
      - format: uri
        type: string
      - type: object
    LdContextMetadata_inner:
      properties:
        URL:
          format: uri
          type: string
        localId:
          format: uri
          type: string
        kind:
          enum:
          - Cached
          - Hosted
          - ImplicitlyCreated
          type: string
        timestamp:
          format: date-time
          type: string
        lastUsage:
          format: date-time
          type: string
        numberOfHits:
          type: integer
        extraInfo:
          type: object
      required:
      - URL
      - kind
      - localId
      - timestamp
      type: object
    Notification_data:
      description: |
        The content of the notification as NGSI-LD Entities. See clause 5.2.4.

        If the notification has been triggered from a Subscription that has the notification.
        endpoint.accept field set to application/geo+json then data is returned as a FeatureCollection.
        In this case, if the notification.endpoint.rece iverInfo contains the key "Prefer" and
        it is set to the value "body=json", then the FeatureCollection will not contain
        an @context field.

        If endpoint.accept is not set or holds another value then Entity[] is returned.
      oneOf:
      - items:
          $ref: '#/components/schemas/Entity'
        type: array
      - $ref: '#/components/schemas/FeatureCollection'
    Property_value:
      description: |
        Property value.
      oneOf:
      - $ref: '#/components/schemas/DateTimeValue'
      - $ref: '#/components/schemas/AnyValue'
    Property_previousValue:
      description: "Previous Property value. Only used in notifications, if the showChanges\
        \ \noption is explicitly requested.\n"
      oneOf:
      - $ref: '#/components/schemas/DateTimeValue'
      - $ref: '#/components/schemas/AnyValue'
      readOnly: true
    VocabularyProperty_vocab:
      description: |
        String Values which shall be type coerced to URIs based on the supplied @context.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    VocabularyProperty_previousVocab:
      description: "Previous Vocabulary Property vocab. Only used in notifications,\
        \ if the showChanges \noption is explicitly requested.\n"
      oneOf:
      - type: string
      - items:
          type: string
        type: array
      readOnly: true
    Street_allOf_languageMap:
      type: object

